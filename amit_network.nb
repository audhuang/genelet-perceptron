(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    280560,       5371]
NotebookOptionsPosition[    279392,       5334]
NotebookOutlinePosition[    279732,       5349]
CellTagsIndexPosition[    279689,       5346]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"-", "PERCEPTRON"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
    " ", "HELPER", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"FUNCTIONS", "--"}], "--"}], "--"}], "--"}], 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "learning", " ", "algorithm", " ", "via", " ", "Amit", " ", "paper"}], " ",
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AmitPerc", "[", 
     RowBox[{"p0_", ",", " ", "w0_", ",", " ", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"w", "=", "w0"}], ",", " ", 
        RowBox[{"p", " ", "=", " ", "p0"}], ",", " ", "sign", ",", " ", 
        "theta"}], "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p", "  ", "=", " ", 
        RowBox[{"p", " ", "/", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"Dimensions", "[", "p0", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"sign", " ", "=", " ", 
        RowBox[{
         RowBox[{"w", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", " ", "j"}], "]"}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"w", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "j"}], "]"}], "]"}], " ", "+", " ", 
           "p"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"sign", " ", ">", " ", "0"}], ",", " ", 
         RowBox[{"theta", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"theta", " ", "=", " ", "0"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", ".", 
           RowBox[{"w", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "j"}], "]"}], "]"}]}], " ", "<", " ", 
          "0"}], ",", " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "if", " ", "error", " ", "on", " ", "presentation", " ", "of", " ", 
           "pattern"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "j"}], "]"}], "]"}], "+=", 
          RowBox[{"p", " ", "*", " ", "theta"}]}]}], "]"}], ";", " ", 
       RowBox[{
        RowBox[{"w", "[", 
         RowBox[{"[", 
          RowBox[{"j", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", "0"}], 
       ";", " ", "\[IndentingNewLine]", 
       RowBox[{"{", "w", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"perceptron", ",", " ", 
     RowBox[{"update", " ", "all", " ", "weights"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"UpdateLayer", "[", 
     RowBox[{"p_", ",", " ", "w0_", ",", " ", "ij_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"w1", "=", "w0"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "w1", "}"}], " ", "=", " ", 
          RowBox[{"AmitPerc", "[", 
           RowBox[{"p", ",", " ", "w1", ",", " ", "j"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "ij"}], "}"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "w1", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"perceptron", ",", " ", 
     RowBox[{
     "check", " ", "if", " ", "steady", " ", "states", " ", "are", " ", 
      "preserved"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CheckLayer", "[", 
     RowBox[{"m_", ",", " ", "w_", ",", " ", "ij_", ",", " ", "ik_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wrong", ",", " ", "p"}], "}"}], ",", 
      RowBox[{
       RowBox[{"wrong", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"m", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Do", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"p", ".", 
                RowBox[{"w", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", " ", "j"}], "]"}], "]"}]}], " ", "<", 
               " ", "0"}], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"wrong", " ", "+=", " ", "1"}], ",", " ", 
              RowBox[{"wrong", " ", "+=", " ", "0"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"j", ",", " ", "ij"}], "}"}]}], "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"k", ",", " ", "ik"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "wrong", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Check", " ", "if", " ", "all", " ", "values", " ", "are", " ", "the", 
     " ", "same", " ", "sign", " ", "and", " ", "the", " ", "diagonal", " ", 
     "is", " ", 
     RowBox[{"zero", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CheckSign", "[", 
     RowBox[{"w_", ",", " ", "t_", ",", " ", "ij_", ",", " ", "sign_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wrong", ",", " ", "zero"}], "}"}], ",", 
      RowBox[{
       RowBox[{"wrong", "=", "0"}], ";", " ", 
       RowBox[{"zero", " ", "=", " ", "0"}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sign", " ", "\[Equal]", " ", "\"\<negative\>\""}], ",", " ",
          "\[IndentingNewLine]", " ", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"w", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "i"}], "]"}], "]"}], " ", "\[NotEqual]", 
               " ", "0"}], ",", " ", 
              RowBox[{"zero", " ", "+=", " ", "1"}]}], "]"}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", ">", " ", "0"}], ",", 
              " ", 
              RowBox[{"wrong", " ", "+=", " ", "1"}]}], "]"}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"w", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], ">", "0"}], 
                ",", " ", 
                RowBox[{"wrong", " ", "+=", " ", "1"}]}], "]"}], " ", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "ij"}], "}"}]}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "ij"}], "}"}]}], "]"}], ",", " ", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"sign", " ", "\[Equal]", " ", "\"\<positive\>\""}], ",", " ",
          "\[IndentingNewLine]", " ", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"w", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "i"}], "]"}], "]"}], " ", "\[NotEqual]", 
               " ", "0"}], ",", " ", 
              RowBox[{"zero", " ", "+=", " ", "1"}]}], "]"}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"t", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "<", " ", "0"}], ",", 
              " ", 
              RowBox[{"wrong", " ", "+=", " ", "1"}]}], "]"}], ";", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"Do", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"w", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", " ", "j"}], "]"}], "]"}], "<", "0"}], 
                ",", " ", 
                RowBox[{"wrong", " ", "+=", " ", "1"}]}], "]"}], " ", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"j", ",", " ", "ij"}], "}"}]}], "]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "ij"}], "}"}]}], "]"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"wrong", ",", " ", "zero"}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "implement", " ", "perceptron", " ", "training", " ", "algorithm", " ", 
     "until", " ", "all", " ", "steady", " ", "states", " ", "are", " ", 
     "preserved"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Perceptron", "[", 
     RowBox[{
     "m_", ",", " ", "w0_", ",", " ", "ij_", ",", " ", "ik_", ",", " ", 
      "state_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wrong", ",", " ", "p", ",", " ", 
        RowBox[{"w", "=", "w0"}], ",", " ", "n"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"state", "\[Equal]", "\"\<normal\>\""}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"wrong", "=", 
           RowBox[{"CheckLayer", "[", 
            RowBox[{"m", ",", " ", "w", ",", " ", "ij", ",", " ", "ik"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"n", "=", "0"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<state: \>\"", ",", " ", "state", ",", " ", 
            "\"\< | iteration: \>\"", ",", " ", "n", ",", " ", 
            "\"\< | # wrong: \>\"", ",", " ", "wrong"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"While", " ", "[", 
           RowBox[{"True", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"wrong", " ", "\[Equal]", " ", 
                RowBox[{"{", "0", "}"}]}], ",", " ", 
               RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
             RowBox[{"n", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"p", "=", 
              RowBox[{"m", "[", 
               RowBox[{"[", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "ik"}], "}"}], "]"}], "]"}], "]"}]}], ";",
              " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", "w", "}"}], "=", 
              RowBox[{"UpdateLayer", "[", 
               RowBox[{"p", ",", " ", "w", ",", " ", "ij"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"wrong", "=", 
              RowBox[{"CheckLayer", "[", 
               RowBox[{"m", ",", " ", "w", ",", " ", "ij", ",", " ", "ik"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<iteration: \>\"", ",", " ", "n", ",", " ", 
               "\"\< | # wrong: \>\"", ",", " ", "wrong"}], "]"}]}]}], "]"}], 
          ";", " ", 
          RowBox[{"{", "w", "}"}]}]}], "]"}], ";", " ", 
       RowBox[{"{", "w", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{
                    "-", "EQUIVALENCE"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], " ", 
     "HELPER", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FUNCTIONS", "--"}], "--"}], "--"}], "--"}], 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sigma", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"x", "+", "1"}], "]"}], "-", 
       RowBox[{"Abs", "[", 
        RowBox[{"x", "-", "1"}], "]"}]}], ")"}], " ", "/", " ", "2"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Normw", "[", 
     RowBox[{"w_", ",", " ", "ij_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "weight", "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"weight", " ", "=", " ", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", " ", 
          RowBox[{"{", 
           RowBox[{"ij", ",", " ", "ij"}], "}"}]}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"weight", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", " ", "j"}], "]"}], "]"}], " ", "=", " ", 
          RowBox[{"Normalize", "[", 
           RowBox[{"w", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", " ", "j"}], "]"}], "]"}], "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"j", ",", " ", "ij"}], "}"}]}], "]"}], ";", " ", 
       "\[IndentingNewLine]", "weight"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"-", "INITIATE"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
      " ", 
      RowBox[{
       RowBox[{
        RowBox[{"VARIABLES", "--"}], "--"}], "--"}]}], "-", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"ij", " ", ":=", " ", "16"}], "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "neurons"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"mem", " ", "=", " ", 
      RowBox[{"IdentityMatrix", "[", "ik", "]"}]}], ";"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"memory", " ", "matrix"}], " ", "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"mem", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}], ",", " ", "1", ",", " ", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", 
       " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", 
       ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", 
       "0", ",", " ", "1"}], "}"}], "}"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"ik", ":=", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "mem", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "memories"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ij", " ", ":=", " ", 
    RowBox[{
     RowBox[{"Dimensions", "[", "mem", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"number", " ", "of", " ", "neurons"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"theta", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", " ", "0", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", 
         " ", "1", ",", " ", "1", ",", " ", "0", ",", " ", "0", ",", " ", "1",
          ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", 
         " ", "0", ",", " ", "1"}], "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "0", ",", 
         " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "1", ",", " ", "0",
          ",", " ", "1", ",", " ", "0", ",", " ", "0", ",", " ", "1", ",", 
         " ", "0", ",", " ", "1"}], "}"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", "1", ",", 
         " ", "0", ",", " ", "1", ",", " ", "0", ",", "1", ",", " ", "0", ",",
          " ", "1", ",", " ", "0", ",", " ", "1", ",", " ", "0", ",", " ", 
         "1", ",", " ", "0"}], "}"}]}], "}"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"theta", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"1", ",", " ", 
       RowBox[{"{", 
        RowBox[{"ik", ",", " ", "ij"}], "}"}]}], "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"weights", " ", ":=", " ", 
      RowBox[{"IdentityMatrix", "[", "ij", "]"}]}], ";"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"initial", " ", "weights"}], " ", "*)"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"weights", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"{", 
       RowBox[{"ij", ",", " ", "ij"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"weights", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "i"}], "]"}], "]"}], " ", "=", " ", "0"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "ij"}], "}"}]}], "]"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"set", " ", "weight", " ", "diagonal", " ", "to", " ", "zero"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"thresholds", " ", ":=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "ij"}], "}"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "set", " ", "initial", " ", "thresholds", " ", "to", " ", "zero"}], " ", 
     "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", "\"\<INITIAL VALUES: \>\"", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<desired memory: \>\"", ",", 
     RowBox[{"MatrixForm", "[", "mem", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<inital weights: \>\"", ",", " ", 
     RowBox[{"MatrixForm", "[", "weights", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<inital thresholds: \>\"", ",", 
     RowBox[{"MatrixForm", "[", "thresholds", "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<\\n\>\"", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"equivalence", " ", "constants"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"alpha", " ", ":=", " ", "0"}], " ", 
   RowBox[{"(*", " ", "leakage", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"kd", " ", ":=", " ", "1"}], "\[IndentingNewLine]", 
   RowBox[{"kp", " ", ":=", " ", ".1"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", "IMPLEMENT"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], 
      " ", "&"}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"TEST", "--"}], "--"}], "--"}], "--"}], 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", "-"}]}]}]}]}]}]}]}]}]}]}]}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "state", " ", "may", " ", "be", " ", "either", " ", "\"\<normal\>\"", " ",
      "or", " ", "\"\<inverse\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"weights", " ", "=", " ", 
    RowBox[{"Normw", "[", 
     RowBox[{"weights", ",", " ", "ij"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"thresholds", " ", "=", " ", 
    RowBox[{"Normalize", "[", "thresholds", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tmax", " ", "=", " ", "50"}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"init", "=", " ", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", " ", "1"}], "}"}], ",", " ", "16"}], "]"}]}],
    "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rsys", "=", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"term", "[", 
        RowBox[{"x1", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x2", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x3", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "3"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x4", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "4"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "4", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x5", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "5"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "5", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x6", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "6"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x7", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "7"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "7", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x8", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "8"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "8", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x9", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "9"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "9", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x10", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "10"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "10", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x11", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "11"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "11", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x12", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "12"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "12", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x13", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "13"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "13", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x14", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "14"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "14", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x15", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "15"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "15", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x16", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"weights", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", " ", "16"}], "]"}], "]"}], ".", 
            RowBox[{"Sigma", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x1", "[", "t", "]"}], ",", " ", 
               RowBox[{"x2", "[", "t", "]"}], ",", " ", 
               RowBox[{"x3", "[", "t", "]"}], ",", " ", 
               RowBox[{"x4", "[", "t", "]"}], ",", " ", 
               RowBox[{"x5", "[", "t", "]"}], ",", " ", 
               RowBox[{"x6", "[", "t", "]"}], ",", " ", 
               RowBox[{"x7", "[", "t", "]"}], ",", " ", 
               RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
               RowBox[{"x9", "[", "t", "]"}], ",", " ", 
               RowBox[{"x10", "[", "t", "]"}], ",", " ", 
               RowBox[{"x11", "[", "t", "]"}], ",", " ", 
               RowBox[{"x12", "[", "t", "]"}], ",", " ", 
               RowBox[{"x13", "[", "t", "]"}], ",", " ", 
               RowBox[{"x14", "[", "t", "]"}], ",", " ", 
               RowBox[{"x15", "[", "t", "]"}], ",", " ", 
               RowBox[{"x16", "[", "t", "]"}]}], "}"}], "]"}]}], " ", "+", 
           " ", 
           RowBox[{"thresholds", "[", 
            RowBox[{"[", "16", "]"}], "]"}]}], ")"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"term", "[", 
        RowBox[{"x1", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x1", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x2", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x2", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x3", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x3", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x4", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x4", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x5", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x5", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x6", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x6", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x7", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x7", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x8", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x8", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x9", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x9", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x10", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x10", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x11", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x11", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x12", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x12", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x13", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x13", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x14", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x14", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x15", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x15", "[", "t", "]"}]}]}], "]"}], ",", 
       RowBox[{"term", "[", 
        RowBox[{"x16", ",", 
         RowBox[{"-", " ", 
          RowBox[{"x16", "[", "t", "]"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"conc", "[", 
        RowBox[{"x1", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x2", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x3", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x4", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "4", "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"conc", "[", 
        RowBox[{"x5", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x6", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "6", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x7", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "7", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x8", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "8", "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"conc", "[", 
        RowBox[{"x9", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "9", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x10", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "10", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x11", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "11", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x12", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "12", "]"}], "]"}]}], "]"}], ",", " ", 
       RowBox[{"conc", "[", 
        RowBox[{"x13", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "13", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x14", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "14", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x15", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "15", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"conc", "[", 
        RowBox[{"x16", ",", 
         RowBox[{"init", "[", 
          RowBox[{"[", "16", "]"}], "]"}]}], "]"}]}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"sol", "=", 
     RowBox[{"SimulateRxnsys", "[", 
      RowBox[{"rsys", ",", "tmax"}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"plotter", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1", "[", "t", "]"}], ",", " ", 
        RowBox[{"x2", "[", "t", "]"}], ",", " ", 
        RowBox[{"x3", "[", "t", "]"}], ",", " ", 
        RowBox[{"x4", "[", "t", "]"}], ",", " ", 
        RowBox[{"x5", "[", "t", "]"}], ",", " ", 
        RowBox[{"x6", "[", "t", "]"}], ",", " ", 
        RowBox[{"x7", "[", "t", "]"}], ",", " ", 
        RowBox[{"x8", "[", "t", "]"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"x9", "[", "t", "]"}], ",", " ", 
        RowBox[{"x10", "[", "t", "]"}], ",", " ", 
        RowBox[{"x11", "[", "t", "]"}], ",", " ", 
        RowBox[{"x12", "[", "t", "]"}], ",", " ", 
        RowBox[{"x13", "[", "t", "]"}], ",", " ", 
        RowBox[{"x14", "[", "t", "]"}], ",", " ", 
        RowBox[{"x15", "[", "t", "]"}], ",", " ", 
        RowBox[{"x16", "[", "t", "]"}]}], "}"}], "/.", "sol"}]}], ";"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"plotter", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tmax"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.671809670906397*^9, 3.6718096868766603`*^9}, {
   3.6718100688904533`*^9, 3.671810077201092*^9}, {3.67181030788384*^9, 
   3.6718103083945093`*^9}, {3.671810341190112*^9, 3.671810447645067*^9}, {
   3.671810834062028*^9, 3.671810863803876*^9}, {3.671811015558422*^9, 
   3.671811070819602*^9}, {3.671811177525073*^9, 3.6718111835118732`*^9}, {
   3.671811232133264*^9, 3.6718112616748343`*^9}, {3.671811296249268*^9, 
   3.6718113038532143`*^9}, {3.6718113389233837`*^9, 
   3.6718113891067457`*^9}, {3.671811495187508*^9, 3.671811504155552*^9}, {
   3.67181160548321*^9, 3.671811608170311*^9}, {3.671811952629109*^9, 
   3.6718120065825663`*^9}, {3.671812203904483*^9, 3.671812231851699*^9}, {
   3.6718122632525673`*^9, 3.671812266234832*^9}, {3.6718124089917793`*^9, 
   3.671812436002369*^9}, {3.6718130120637493`*^9, 3.671813013970405*^9}, {
   3.671813887876265*^9, 3.6718139641760283`*^9}, {3.671814105235394*^9, 
   3.671814116180723*^9}, {3.6718163773035603`*^9, 3.6718165111749897`*^9}, {
   3.6718165689534616`*^9, 3.671816584158093*^9}, {3.6718166266041594`*^9, 
   3.671816828676255*^9}, {3.671820218006875*^9, 3.671820223657034*^9}, {
   3.6723778856710653`*^9, 3.6723780192936296`*^9}, {3.672378320116061*^9, 
   3.672378369755262*^9}, {3.6723785400332747`*^9, 3.672378562964365*^9}, {
   3.672378801852511*^9, 3.67237886701795*^9}, {3.672378919208633*^9, 
   3.6723789386091948`*^9}, {3.672379329913094*^9, 3.672379382459539*^9}, {
   3.672379469797155*^9, 3.672379506354556*^9}, {3.672381039522519*^9, 
   3.672381145663513*^9}, {3.672381258094325*^9, 3.672381261943787*^9}, {
   3.672381303904743*^9, 3.672381336937595*^9}, {3.672381535607814*^9, 
   3.6723815598178473`*^9}, {3.6723816076079693`*^9, 3.672381674715149*^9}, {
   3.672381879991716*^9, 3.672381884359705*^9}, {3.672382110320531*^9, 
   3.672382165265697*^9}, {3.6723823222860937`*^9, 3.6723824259634123`*^9}, {
   3.672382698333066*^9, 3.672382708210967*^9}, {3.672382799687688*^9, 
   3.6723828823248987`*^9}, {3.672382982800149*^9, 3.672383046675454*^9}, {
   3.672383077050682*^9, 3.672383250081843*^9}, {3.672383313648094*^9, 
   3.672383432130044*^9}, {3.672383488309762*^9, 3.672383514652837*^9}, {
   3.672383614265239*^9, 3.6723836751914597`*^9}, 3.672383721965798*^9, {
   3.672385555317954*^9, 3.672385569251061*^9}, 3.672385602428905*^9, {
   3.6723857169671*^9, 3.6723858551607227`*^9}, {3.672386034376252*^9, 
   3.6723860842708178`*^9}, {3.672386141155343*^9, 3.672386146385195*^9}, {
   3.672386221649678*^9, 3.672386370894096*^9}, {3.6723870446599216`*^9, 
   3.672387053029367*^9}, {3.6724185777332983`*^9, 3.672418599194786*^9}, {
   3.67241898855858*^9, 3.672419035932498*^9}, {3.6724190901073217`*^9, 
   3.672419163649589*^9}, {3.672419210833021*^9, 3.67241923001503*^9}, {
   3.67241926604557*^9, 3.672419266452269*^9}, {3.672419434261977*^9, 
   3.672419446727222*^9}, {3.6724195637630997`*^9, 3.672419572962524*^9}, {
   3.6724197237364902`*^9, 3.6724197507059307`*^9}, {3.672419897758728*^9, 
   3.672419946794599*^9}, {3.672420176385208*^9, 3.672420292017255*^9}, {
   3.672420333707065*^9, 3.672420403408723*^9}, {3.6724204660427103`*^9, 
   3.672420476283844*^9}, {3.672420623197619*^9, 3.6724209124671173`*^9}, {
   3.672421005754792*^9, 3.672421020257661*^9}, {3.6724210548974113`*^9, 
   3.672421107514832*^9}, {3.672421280675747*^9, 3.672421287262924*^9}, {
   3.6724213255453587`*^9, 3.672421363736403*^9}, {3.672421567134389*^9, 
   3.672421577309087*^9}, {3.672421637086484*^9, 3.672421688147202*^9}, {
   3.672421807760494*^9, 3.67242201323489*^9}, {3.6724220563275843`*^9, 
   3.672422112768965*^9}, {3.67242256219212*^9, 3.672422609176567*^9}, {
   3.67242270043432*^9, 3.672422732113924*^9}, {3.6724227934298143`*^9, 
   3.672422806749813*^9}, {3.672422843353984*^9, 3.672422886948406*^9}, {
   3.6724229249124527`*^9, 3.6724229563633423`*^9}, {3.672422998765739*^9, 
   3.672423029839555*^9}, {3.672423069354906*^9, 3.672423089497575*^9}, {
   3.672423137715641*^9, 3.672423150039319*^9}, {3.6724232828449383`*^9, 
   3.672423349120145*^9}, {3.67242338168244*^9, 3.672423420057222*^9}, 
   3.672423491473641*^9, {3.672423570310277*^9, 3.672423637936591*^9}, {
   3.672423698383123*^9, 3.672423708968972*^9}, {3.672423764895131*^9, 
   3.672423788201941*^9}, {3.67242382289662*^9, 3.672424034121149*^9}, {
   3.6724240683448553`*^9, 3.672424079767683*^9}, {3.672424128438796*^9, 
   3.6724241392337914`*^9}, {3.672424214542893*^9, 3.672424250321184*^9}, {
   3.672424293627439*^9, 3.672424424077702*^9}, {3.672424464040709*^9, 
   3.672424492139162*^9}, {3.67242457664639*^9, 3.6724245878817377`*^9}, {
   3.672424634148919*^9, 3.672424694088437*^9}, {3.672424729677759*^9, 
   3.672424755376498*^9}, {3.672425230011466*^9, 3.672425235671261*^9}, {
   3.672425268198724*^9, 3.672425294797164*^9}, {3.672425344244692*^9, 
   3.6724255124473267`*^9}, {3.672425576689286*^9, 3.672425593076523*^9}, {
   3.672425659458432*^9, 3.672425744412137*^9}, {3.672425774576605*^9, 
   3.672425842393358*^9}, {3.672425881193555*^9, 3.67242603046541*^9}, {
   3.67242608758152*^9, 3.6724264038321943`*^9}, {3.6724264395299587`*^9, 
   3.6724264403833523`*^9}, 3.672426480645294*^9, {3.672426556519105*^9, 
   3.6724265914868183`*^9}, {3.6724266258657513`*^9, 3.672426642635907*^9}, {
   3.672426742609271*^9, 3.672426900249362*^9}, {3.672426936445526*^9, 
   3.672426950513275*^9}, {3.672426991546281*^9, 3.672427008898201*^9}, {
   3.6724270407857122`*^9, 3.67242705737848*^9}, {3.6724270958406773`*^9, 
   3.672427128565291*^9}, {3.672427517162024*^9, 3.672427550681164*^9}, {
   3.672428345801989*^9, 3.672428369135952*^9}, {3.672428411995015*^9, 
   3.672428694671255*^9}, {3.672428739986311*^9, 3.672428780389475*^9}, {
   3.672428908294044*^9, 3.6724289259692707`*^9}, {3.672429032468513*^9, 
   3.672429044905777*^9}, {3.67242907829846*^9, 3.672429169123592*^9}, 
   3.67242992959851*^9, {3.6724299624585533`*^9, 3.67242997009892*^9}, {
   3.672430626464011*^9, 3.6724306387945833`*^9}, {3.6724308815307837`*^9, 
   3.672430931792403*^9}, {3.674157591612054*^9, 3.6741576861789303`*^9}, {
   3.674157718592475*^9, 3.674157737912407*^9}, {3.674157787892651*^9, 
   3.6741577888950367`*^9}, {3.6741725260127707`*^9, 3.674172627484833*^9}, {
   3.6741726637932262`*^9, 3.674172681589916*^9}, {3.6741732013202085`*^9, 
   3.6741732339482727`*^9}, {3.674173406223474*^9, 3.674173407423937*^9}, {
   3.67417351888174*^9, 3.674173520549305*^9}, {3.6741735602619143`*^9, 
   3.674173580688897*^9}, {3.674173634701527*^9, 3.6741736380721226`*^9}, {
   3.67417384225434*^9, 3.6741738444498453`*^9}, {3.674174306666939*^9, 
   3.67417439185211*^9}, {3.674174460711254*^9, 3.674174461932603*^9}, {
   3.6741745395870905`*^9, 3.6741745718950453`*^9}, {3.6741752512638164`*^9, 
   3.674175251322873*^9}, {3.6741762344320707`*^9, 3.6741762438367777`*^9}, {
   3.6741764526065826`*^9, 3.6741764698731375`*^9}, {3.67417655091175*^9, 
   3.674176648461952*^9}, {3.6741768187976427`*^9, 3.674176821502975*^9}, {
   3.674176916798726*^9, 3.6741769174685235`*^9}, {3.6741769747994065`*^9, 
   3.674176975534814*^9}, {3.6741770080452576`*^9, 3.6741770086403527`*^9}, {
   3.674177048543016*^9, 3.6741770688476477`*^9}, {3.674177115271936*^9, 
   3.674177183008603*^9}, {3.6741773607727795`*^9, 3.6741774999416633`*^9}, {
   3.6741775413438244`*^9, 3.674177648816112*^9}, {3.6741776872438936`*^9, 
   3.674177709411175*^9}, {3.6741777394271626`*^9, 3.674177904474495*^9}, {
   3.67417799100931*^9, 3.674178183497739*^9}, {3.6741782429902315`*^9, 
   3.674178256073859*^9}, {3.674178301973612*^9, 3.674178314155575*^9}, {
   3.674178402946561*^9, 3.6741784032228975`*^9}, {3.674178473611538*^9, 
   3.674178496011115*^9}, {3.6741785507515354`*^9, 3.6741786589744234`*^9}, {
   3.6741821208056307`*^9, 3.6741821976225286`*^9}, {3.674182265329939*^9, 
   3.674182265980094*^9}, {3.674182371382564*^9, 3.6741823763395586`*^9}, {
   3.6741824666826725`*^9, 3.6741824675245247`*^9}, {3.674182564632869*^9, 
   3.674182670550321*^9}, {3.6741829103907194`*^9, 3.674182914436814*^9}, 
   3.674183065642076*^9, {3.6741831283010645`*^9, 3.674183147334239*^9}, {
   3.674183180863908*^9, 3.6741832875865717`*^9}, {3.674183720776305*^9, 
   3.6741837339470935`*^9}, {3.6741843446820807`*^9, 
   3.6741843689301367`*^9}, {3.6741844104982452`*^9, 
   3.6741845834740853`*^9}, {3.674184632658236*^9, 3.674184712160108*^9}, {
   3.674184801882972*^9, 3.67418482715689*^9}, {3.6741848676170397`*^9, 
   3.674184877802082*^9}, {3.674185018311907*^9, 3.674185032175249*^9}, {
   3.674185086808344*^9, 3.6741850892630334`*^9}, {3.6741851579306283`*^9, 
   3.6741853589989166`*^9}, {3.674185443013668*^9, 3.67418544326095*^9}, {
   3.6741855188651977`*^9, 3.6741855227816305`*^9}, {3.6741855612644196`*^9, 
   3.6741855645519876`*^9}, {3.674185681526963*^9, 3.674185804987142*^9}, {
   3.6741859175259495`*^9, 3.674185921076487*^9}, {3.6741859595852957`*^9, 
   3.6741859728082*^9}, {3.674186007594438*^9, 3.674186011967759*^9}, 
   3.6741860541835775`*^9, {3.674186118923149*^9, 3.674186127727417*^9}, 
   3.6741861943409104`*^9, {3.6741862663301396`*^9, 3.674186287312503*^9}, 
   3.674186318398864*^9, 3.6741864592044315`*^9, {3.674186594385488*^9, 
   3.6741866846424923`*^9}, {3.674186754644837*^9, 3.674186792700158*^9}, {
   3.6741868297484846`*^9, 3.6741868298901696`*^9}, {3.6741868773771706`*^9, 
   3.6741868839368916`*^9}, {3.6741869293705144`*^9, 
   3.6741869380889144`*^9}, {3.674186972561122*^9, 3.674187007573757*^9}, {
   3.6741871397795115`*^9, 3.674187167035302*^9}, {3.674187237465087*^9, 
   3.6741872848494053`*^9}, {3.674187316028406*^9, 3.6741873167438235`*^9}, {
   3.674187524467004*^9, 3.6741875684830666`*^9}, {3.674187598714021*^9, 
   3.6741876496364765`*^9}, {3.67418770345409*^9, 3.674187834213768*^9}, {
   3.6741878961004696`*^9, 3.6741879049082813`*^9}, {3.6741879669105153`*^9, 
   3.6741879684339666`*^9}, {3.6741880760519857`*^9, 3.674188080424923*^9}, {
   3.6741881453467946`*^9, 3.6741881467386155`*^9}, {3.674188234864273*^9, 
   3.674188264916175*^9}, {3.674188302189069*^9, 3.6741883029840536`*^9}, {
   3.6741883615387793`*^9, 3.674188409612353*^9}, {3.6741884518358827`*^9, 
   3.6741884648594456`*^9}, 3.6741885989318247`*^9, {3.6741886693054748`*^9, 
   3.674188715284979*^9}, {3.674188747241783*^9, 3.6741887506766243`*^9}, {
   3.6741887883217044`*^9, 3.6741887937709007`*^9}, {3.674188878411294*^9, 
   3.6741889221472006`*^9}, {3.674189064053458*^9, 3.674189098868802*^9}, 
   3.6742227976731305`*^9, 3.674222901603655*^9, {3.6742229320844765`*^9, 
   3.6742229337734776`*^9}, {3.674222980737878*^9, 3.674223087879847*^9}, {
   3.674224047619153*^9, 3.674224131874742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.674178105275016*^9, 3.674178189149099*^9, 3.6741782630458336`*^9, 
   3.6741785091998453`*^9, 3.6741786084369483`*^9, 3.674178647677438*^9, 
   3.6741824681911993`*^9, 3.6741829587269573`*^9, {3.6741832331302624`*^9, 
   3.674183275503338*^9}, 3.6741859772120256`*^9, 3.674186464456807*^9, {
   3.674186668158226*^9, 3.674186685471449*^9}, 3.674186838190962*^9, 
   3.674186893719232*^9, 3.6741869451659636`*^9, {3.6741869781689787`*^9, 
   3.674187008252553*^9}, 3.6741871720245686`*^9, {3.6741872509050894`*^9, 
   3.67418728724841*^9}, 3.6741878111047907`*^9, 3.674187910702652*^9, 
   3.674187983826773*^9, 3.674188087092764*^9, 3.6741882456360826`*^9, 
   3.6741883859412184`*^9, 3.674188491063528*^9, 3.6741886053329115`*^9, {
   3.674188673107337*^9, 3.6741887176073174`*^9}, 3.674188762925231*^9, 
   3.6741888009112587`*^9, 3.674188894006564*^9, 3.674188925791786*^9, 
   3.674189072790262*^9, 3.6742228250640373`*^9, 3.674222907447842*^9, 
   3.674223091512442*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.674178105275016*^9, 3.674178189149099*^9, 3.6741782630458336`*^9, 
   3.6741785091998453`*^9, 3.6741786084369483`*^9, 3.674178647677438*^9, 
   3.6741824681911993`*^9, 3.6741829587269573`*^9, {3.6741832331302624`*^9, 
   3.674183275503338*^9}, 3.6741859772120256`*^9, 3.674186464456807*^9, {
   3.674186668158226*^9, 3.674186685471449*^9}, 3.674186838190962*^9, 
   3.674186893719232*^9, 3.6741869451659636`*^9, {3.6741869781689787`*^9, 
   3.674187008252553*^9}, 3.6741871720245686`*^9, {3.6741872509050894`*^9, 
   3.67418728724841*^9}, 3.6741878111047907`*^9, 3.674187910702652*^9, 
   3.674187983826773*^9, 3.674188087092764*^9, 3.6741882456360826`*^9, 
   3.6741883859412184`*^9, 3.674188491063528*^9, 3.6741886053329115`*^9, {
   3.674188673107337*^9, 3.6741887176073174`*^9}, 3.674188762925231*^9, 
   3.6741888009112587`*^9, 3.674188894006564*^9, 3.674188925791786*^9, 
   3.674189072790262*^9, 3.6742228250640373`*^9, 3.674222907447842*^9, 
   3.674223091516946*^9}],

Cell[CellGroupData[{

Cell[BoxData["\<\"INITIAL VALUES: \"\>"], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915189486`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"desired memory: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", "1", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "1", "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "1"},
       {"1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1"},
       {"1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}], "1", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["desired memory: ", 
   MatrixForm[{{1, -1, -1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, 1}, {
    1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, -1, -1, 1, -1, 1}, {1, -1, 1, -1, 
    1, -1, 1, -1, 1, -1, 1, -1, 1, -1, 1, -1}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915204525`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"inital weights: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "0", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "0", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "0", "1", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "0", "1", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "0", "1", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "1", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "1", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "1", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", "1", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "0", 
        "1", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "0", "1"},
       {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
        "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["inital weights: ", 
   MatrixForm[{{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 0, 1, 1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1}, {1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 
    1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 
    1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 
    1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1}, {1, 
    1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 0, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1}, {
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1, 1, 1, 0, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.674223091524457*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"inital thresholds: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["inital thresholds: ", 
   MatrixForm[{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915264587`*^9}],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915269594`*^9}],

Cell[BoxData["\<\"TRAINING: \"\>"], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.67422309152796*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"state: \"\>", "\[InvisibleSpace]", "\<\"normal\"\>", 
   "\[InvisibleSpace]", "\<\" | iteration: \"\>", "\[InvisibleSpace]", "0", 
   "\[InvisibleSpace]", "\<\" | # wrong: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "24", "}"}]}],
  SequenceForm["state: ", "normal", " | iteration: ", 0, " | # wrong: ", {24}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915284605`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"iteration: \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" | # wrong: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "16", "}"}]}],
  SequenceForm["iteration: ", 1, " | # wrong: ", {16}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.674223091528961*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"iteration: \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" | # wrong: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "16", "}"}]}],
  SequenceForm["iteration: ", 2, " | # wrong: ", {16}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.674223091528961*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"iteration: \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" | # wrong: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "8", "}"}]}],
  SequenceForm["iteration: ", 3, " | # wrong: ", {8}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915299635`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"iteration: \"\>", "\[InvisibleSpace]", "4", 
   "\[InvisibleSpace]", "\<\" | # wrong: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", "0", "}"}]}],
  SequenceForm["iteration: ", 4, " | # wrong: ", {0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915304656`*^9}],

Cell[BoxData["\<\"\\n\"\>"], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.674223091530966*^9}],

Cell[BoxData["\<\"RESULTS: \"\>"], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915314665`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"final weights: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], 
        FractionBox["3", "2"], 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["7", "4"], "1", 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], 
        FractionBox["3", "2"]},
       {
        FractionBox["1", "4"], "0", 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["1", "4"], "1", 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], 
        FractionBox["1", "2"]},
       {
        FractionBox["5", "4"], "1", "0", 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["3", "2"], 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1"},
       {
        FractionBox["3", "4"], "1", 
        FractionBox["1", "2"], "0", 
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["1", "2"], 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1"},
       {
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], "0", 
        FractionBox["1", "2"], "1", 
        FractionBox["3", "4"], "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], 
        FractionBox["1", "2"]},
       {
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], "0", "1", 
        FractionBox["5", "4"], "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], 
        FractionBox["3", "2"]},
       {
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1", "0", 
        FractionBox["3", "4"], "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1", 
        FractionBox["3", "2"], 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], "1"},
       {
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1", 
        FractionBox["1", "2"], "0", "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1", 
        FractionBox["1", "2"], 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], "1"},
       {
        FractionBox["5", "4"], "1", 
        FractionBox["3", "2"], 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], "0", 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1"},
       {
        FractionBox["3", "4"], "1", 
        FractionBox["1", "2"], 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["1", "2"], "0", 
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1"},
       {
        FractionBox["7", "4"], "1", 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], 
        FractionBox["3", "2"], 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], "0", "1", 
        FractionBox["3", "2"], 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], 
        FractionBox["3", "2"]},
       {
        FractionBox["1", "4"], "1", 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], 
        FractionBox["1", "2"], 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["1", "4"], "0", 
        FractionBox["1", "2"], 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], 
        FractionBox["1", "2"]},
       {
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1", 
        FractionBox["3", "2"], 
        FractionBox["3", "4"], "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1", "0", 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], "1"},
       {
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1", 
        FractionBox["1", "2"], 
        FractionBox["5", "4"], "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1", 
        FractionBox["1", "2"], "0", 
        FractionBox["3", "4"], "1"},
       {
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], 
        FractionBox["5", "4"], 
        FractionBox["1", "2"], "1", 
        FractionBox["3", "4"], "1", 
        FractionBox["3", "4"], 
        FractionBox["3", "4"], "1", "1", 
        FractionBox["3", "4"], "0", 
        FractionBox["1", "2"]},
       {
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], 
        FractionBox["3", "2"], "1", 
        FractionBox["5", "4"], "1", 
        FractionBox["5", "4"], 
        FractionBox["5", "4"], "1", "1", 
        FractionBox["5", "4"], 
        FractionBox["3", "4"], "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["final weights: ", 
   MatrixForm[{{0, 1, 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[5, 4], 
      Rational[3, 2], 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[7, 4], 1, 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[5, 4], 
      Rational[3, 2]}, {
      Rational[1, 4], 0, 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[3, 4], 
      Rational[1, 2], 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[1, 4], 1, 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[3, 4], 
      Rational[1, 2]}, {
      Rational[5, 4], 1, 0, 
      Rational[3, 4], 
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[3, 2], 
      Rational[3, 4], 
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[5, 4], 1}, {
      Rational[3, 4], 1, 
      Rational[1, 2], 0, 
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[1, 2], 
      Rational[5, 4], 
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[3, 4], 1}, {
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 0, 
      Rational[1, 2], 1, 
      Rational[3, 4], 1, 
      Rational[3, 4], 
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[5, 4], 
      Rational[1, 2]}, {
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[3, 4], 0, 1, 
      Rational[5, 4], 1, 
      Rational[5, 4], 
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[3, 4], 
      Rational[3, 2]}, {
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[5, 4], 1, 0, 
      Rational[3, 4], 1, 
      Rational[5, 4], 
      Rational[5, 4], 1, 
      Rational[3, 2], 
      Rational[3, 4], 
      Rational[5, 4], 1}, {
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[3, 4], 1, 
      Rational[1, 2], 0, 1, 
      Rational[3, 4], 
      Rational[3, 4], 1, 
      Rational[1, 2], 
      Rational[5, 4], 
      Rational[3, 4], 1}, {
      Rational[5, 4], 1, 
      Rational[3, 2], 
      Rational[3, 4], 
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 0, 
      Rational[3, 4], 
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[5, 4], 1}, {
      Rational[3, 4], 1, 
      Rational[1, 2], 
      Rational[5, 4], 
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[1, 2], 0, 
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[3, 4], 1}, {
      Rational[7, 4], 1, 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[5, 4], 
      Rational[3, 2], 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[3, 2], 
      Rational[5, 4], 0, 1, 
      Rational[3, 2], 
      Rational[5, 4], 
      Rational[5, 4], 
      Rational[3, 2]}, {
      Rational[1, 4], 1, 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[3, 4], 
      Rational[1, 2], 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[1, 4], 0, 
      Rational[1, 2], 
      Rational[3, 4], 
      Rational[3, 4], 
      Rational[1, 2]}, {
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[5, 4], 1, 
      Rational[3, 2], 
      Rational[3, 4], 1, 
      Rational[5, 4], 
      Rational[5, 4], 1, 0, 
      Rational[3, 4], 
      Rational[5, 4], 1}, {
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[3, 4], 1, 
      Rational[1, 2], 
      Rational[5, 4], 1, 
      Rational[3, 4], 
      Rational[3, 4], 1, 
      Rational[1, 2], 0, 
      Rational[3, 4], 1}, {
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 
      Rational[5, 4], 
      Rational[1, 2], 1, 
      Rational[3, 4], 1, 
      Rational[3, 4], 
      Rational[3, 4], 1, 1, 
      Rational[3, 4], 0, 
      Rational[1, 2]}, {
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[3, 4], 
      Rational[3, 2], 1, 
      Rational[5, 4], 1, 
      Rational[5, 4], 
      Rational[5, 4], 1, 1, 
      Rational[5, 4], 
      Rational[3, 4], 0}}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915344696`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"thresholds: \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["thresholds: ", 
   MatrixForm[{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915439787`*^9}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Number of incorrect signs, number of self-weights: \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}],
  SequenceForm["Number of incorrect signs, number of self-weights: ", {0, 0}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.6741781052765174`*^9, 3.6741781891516013`*^9, 3.674178263047335*^9, 
   3.6741785092023478`*^9, 3.674178608438449*^9, 3.67417864767894*^9, 
   3.674182468193201*^9, 3.6741829587289596`*^9, {3.6741832331332674`*^9, 
   3.6741832755083427`*^9}, 3.6741859772185354`*^9, 3.6741864644683204`*^9, {
   3.674186668242818*^9, 3.674186685481462*^9}, 3.674186838199473*^9, 
   3.6741868937287436`*^9, 3.6741869451749725`*^9, {3.67418697817749*^9, 
   3.674187008262061*^9}, 3.674187172031578*^9, {3.6741872509921856`*^9, 
   3.67418728725492*^9}, 3.6741878111117997`*^9, 3.6741879107081575`*^9, 
   3.6741879838317776`*^9, 3.674188087097268*^9, 3.6741882456405907`*^9, 
   3.674188385946724*^9, 3.674188491069034*^9, 3.67418860534042*^9, {
   3.674188673111842*^9, 3.674188717613323*^9}, 3.674188762933239*^9, 
   3.674188800919769*^9, 3.6741888940130706`*^9, 3.674188925798294*^9, 
   3.6741890727952666`*^9, 3.674222825070456*^9, 3.674222907454352*^9, 
   3.6742230915449796`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.9258683149391551`"}], ",", "0.010132788629621192`", ",", 
   RowBox[{"-", "0.3545903352189175`"}], ",", 
   RowBox[{"-", "0.01366402519787302`"}], ",", 
   RowBox[{"-", "0.5353508530001125`"}], ",", 
   RowBox[{"-", "0.11515983282111142`"}], ",", "0.22113191006368194`", ",", 
   "0.29282081646209246`", ",", 
   RowBox[{"-", "0.09945155397545014`"}], ",", 
   RowBox[{"-", "0.5563567664775544`"}], ",", 
   RowBox[{"-", "0.47169800985857524`"}], ",", "0.8059650665492417`", ",", 
   RowBox[{"-", "0.3577991588888345`"}], ",", 
   RowBox[{"-", "0.1258207471338202`"}], ",", 
   RowBox[{"-", "0.8917350846391927`"}], ",", "0.8822588034833694`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.674178105275016*^9, 3.674178189149099*^9, 3.6741782630458336`*^9, 
   3.6741785091998453`*^9, 3.6741786084369483`*^9, 3.674178647677438*^9, 
   3.6741824681911993`*^9, 3.6741829587269573`*^9, {3.6741832331302624`*^9, 
   3.674183275503338*^9}, 3.6741859772120256`*^9, 3.674186464456807*^9, {
   3.674186668158226*^9, 3.674186685471449*^9}, 3.674186838190962*^9, 
   3.674186893719232*^9, 3.6741869451659636`*^9, {3.6741869781689787`*^9, 
   3.674187008252553*^9}, 3.6741871720245686`*^9, {3.6741872509050894`*^9, 
   3.67418728724841*^9}, 3.6741878111047907`*^9, 3.674187910702652*^9, 
   3.674187983826773*^9, 3.674188087092764*^9, 3.6741882456360826`*^9, 
   3.6741883859412184`*^9, 3.674188491063528*^9, 3.6741886053329115`*^9, {
   3.674188673107337*^9, 3.6741887176073174`*^9}, 3.674188762925231*^9, 
   3.6741888009112587`*^9, 3.674188894006564*^9, 3.674188925791786*^9, 
   3.674189072790262*^9, 3.6742228250640373`*^9, 3.674222907447842*^9, 
   3.6742230915459805`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Qw9Sf9Uv+3+X/vDW
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd1Hc8Vm8UAHAjI9l7e/Fa77ArlbonlWRXFLJXiqRSlJFRthbRQNKggRQZ
lfcpo/JDkkhWMjKzN/nd6597P9/P+Tznnufc8zzyricPeLAwMTFJ4Q/inR7q
yq7lfneHdFeZtstyPCPDbmTrYdJ5jL9vTI5TJ53RahZ3mkSKxR5Z94ltHXzM
0N785QHXjxvYs1jm0cKVfEbAXlteNtJtzGiApaN3qpDx9nBP4OrRe5iQvfPb
bvsyBnPh64nllizsgqGMWbc8YhhWgv2c3BNMwHXCSfVHNcOr9vL16V3PsWy3
AJXjGTWM+Kaa6omj+djLaBU79YJ6xuG/HKFzewowq5RuxnTcV4bX6afisy0v
MZXyXvutg98Y52dNX00fK8RGOHeoxJ9rZsRdGDObWirCxn7Edu/a1MrIjdCN
HJcrxRzqJaLSjnQxytlbZMYKyrDeX5+vNrl1MxrizpeM7nqLbTNJVD2u18OY
vFE+OnSUgT3W+uP1XuMPIyJes3I6GGFNBVhbrNkgI64uXGB6z3uMUtUSdCZi
mJG2n/x8suUD1j1TcCtTdJzxMOnswkRmBXY7Jq7SxmyCkfu92nDiWCW2LHMs
/GzMJKPc9lj32FIVNnvjyEPT9TOMbpc80VG5zxilZnrlgfIiY+jBqtvIwGfM
us5mQeXkEmOyz7JguKAG03f0evakaJmx7viUydCuWmw60bHipf4qQ/m0Xvif
o18wqe0m5rclWNCmnd0z4y2NWMHuuN1Gv9lR0H5v52G5VszkG/9kZDUf+he5
SaIroRXz5VY/5EXjR2GvmRsbF1ox0WX9FMGz/OiS1K1dZd9+Ysl6Masz6wTQ
lb5K5djodoxlvbcen5wgyjwvO6o81oXVsiqk6W8XRj0NA/paTj1Yvvy4zEdl
cUQ+bi7x7GYP5llqxjrgIo48WQtnyLU9mI4Vb9LDNHE0sPFinviWXqwY3O2m
+CXQyB0REpNQH3bLxIBrcVoCzbobsH6p7sc6k41ntz6TQusX7n72UR/CXE/e
7/2vSRbpRbdeMHYZwi5euyN9klkOeYmI0VST8fihjKT/6HKoWuvGlZ6FISwp
+/pCwWU5dOl4zEG7qmGMQXJwJkmQEFO7f8de+1EsOV94ixuDhIK6HgcK7BnH
Guyal0nT8ujG4z37wxzHsfGIC0wn2BXQ0xO9amMB41i0cBJrmrgC+rkk31b7
dBxjkih690BfAemJp2+P4Z/AjNSq5x0jFdCsZRLLatsEdjVm+9KzDYro1IeL
CSOnpzDp6j/SHznJaF4gObctfgpzqfWbDxIjo1CXnPqah1MYjYt3QUKZjBKY
vvI/aZ7CLit8nxHYRUY5OxRuemydxi6EV72aCSKjX2WV6Z3MM9g20yfvnw6S
keWr9fkN12ax5MWKgPwiJdTCItvAeDKLJUwNL3x+r4QcD2hP5H2YxXS++eR+
rVNCPhN2OonTs9iYioLkkz4lFKPxvHifzRxWbLmgFCSsjBjPzNEHuXksaMS4
t9JXGak/TPpamLeAyQiFGOWKqiDhW5pz6PMCJndh56sL8ipoKb5Ouq53AcN+
2g1vpKmgT2c4vPokFzEpw+Jd53aqINddQf9EohexZu2WSXlvFXTztys1wGkJ
m7PjgR1vVNAySfvyFv4VbJdEsJyFhSr6Lfzl6R7qCmZ8LbWJx0YVfeb0adhv
uIL9l3vwv3fOqihl/JHU8eAV7I5qYffEKVWkiSRe3hlYwTh0DXxzk1SRmxNz
1xL6h10R1/aNblJFfeZe0l16TLAS/3i3u6kaEq72IYfuYQIvvkYWpoNqyGD7
KZrMASaor+Kyv26rhjKpF/SPeDPBp59icjc91ZA9Z4J9SzoTiPDXPVAIU0ON
7/PTvrAwg/IKe6xbgRoq152TRrXMIJLPSv3DTUGjz5bITq3M0BbJL2IlSEHS
ikz0f33MUGY7fa5EjILOC6zfrr/KDE02Fj+PKlCQ7l9JhxItFnAVVXvgupmC
nmbvSH+RwgI/UI76NycKSpWMkrnvzAoduju9Zp5S0GxPfba5LytE7mb8/ZRP
QVa5YtrLQaxQVhixPbmQggThieHhVFZg42jwEiynoASP2pM89ayw4yEcy2ug
oLAXgh/Ob1sHRcZHsv2mKcjL8J7nAVE2MP3b5Xp+ExVV8w2MryqygfflZBWn
rVSk1KoZlKvFBjvSrQx37KCi394frnKasYFDhi5jYA8V2V/vKymPZAMhQfm2
MSsqsmynbqBOsMG2kAt3G05R0ZbTJfmstezAnCceTM6moobVbY6nWtkhsSo7
edtTKvJMZHB39bPDH1aOCLNcKrqRU32sjJkDpnOqV11eUdFQZ5Piqc0c8LTy
X5g5g4rSTCZSO7M4oCYn9LZ+MxX9I1PCSs9zwvmOuI8PmGgo+WWuuko0J2Sf
bVNXYqUhCmh1JCdzwun0yx5ZbDR06IjeVr98TthxJvnINS4ayr9uOK3cxwlK
Ug5K24RpyPmfq1ey5XoQDrzP1qhMQxUtdy1PqnBB91BAo/Y+PL+r9fSMDheM
CDxYEDOhIc9R3lvBwAWivqWURVMa4mKN6Iq15QKDAeV3RZY0ZKnu5fswngvC
voeSuWxoqPOSbkLrGBeUeQpy0jxpaFGr7uOukg2wf/OH2VNhNFT7Nsq7pnID
JH+y6mCKoKGMvcC3/+sGUPFbsEqMpKGdDq8OOQ5tAJ2yPRz3omgoJuZ2X6A0
NyTujOx/lEBDol0erHlh3LChd1vn7ls0pJXwb4f4Ph646kZW78qlIe1jy+65
h3gghVX4nUE+DekaLsYZuPPADXm1yQcvaGgT02yzz0Ue6A/IcHJ6RUP6/qO+
74t4IG4i/11ZCQ0Z2bdnHFfghVuTBiPsFXi/aGX/3i7xQmtKz1GeZhpyXV9C
PrCeD4Jd9i/QWmjIrb/I+I8oH3S32z40/oH3K7MgRUCbD6qdOazDftKQj/AT
dU8vPpjJ9Qz73klDAcupjnzf+WDQqixN7Q8N7e3f2qV5mB+M3w4VJszi6781
jUQ78EPb3MtujzkauoR8Fzvd+MHmbU3x9nkaen8nSyTRjx9eLEkcG1ygoW0W
XKaDsfwgprIgrbVCQxolrSX33/JDnGOVfyQrHYnFBd4QVBAALY8xvp18dLQp
QDDzmKoA6K3805nCbeX+PBepC8D54aEdD/np6PqOX598twmAolMnP6sgHW2Y
2rtaY4V7Ka3llTAdrR4R84mMFgDPrR6WPRJ09If+es/0iACc1DMuvqRIRwoh
JzyoUwLQvp1jQYhMR/a15MuuCwLgsUXYIQt3w/GkygY2QciQG7n+VomOyrL9
duXKCoKZ6brmfhU6SpCn7vS0FARKiNhPIRodaYlk6v94JQjcxRyKP3ToyMf9
sD1fmSDYvM6QNNelo8eveIMN8Vuh+m/SkQrckgdC3hTWCsL6ctvyZxvpaN1V
u63X+wSB08tY1X8zHTVziugZiwmB3nOOs71b6ShoOVbn7QUhyDhU/GHfTjqq
93dLvhAuBE/eyCm8wk0a1Z/RixGCo5KRDVIGdFTZMfa66KYQRCjpyA3j5mZY
b81/IQScz38+Dt9NRxnh8juz+oXgg9sdq6t76eg9e6l5zAFhsKiXN9U1oyPh
izfyDW2Fgcnkz6NY3J5z3vxszsJA4jjq14mba0C2MfyEMPAtPD4SZU5HBz5f
sg6KEYYjjxIff7Ggo954S3vfcmHgie2vNTpARxwCA8esKCLwav1+zbZDdDQb
bb/nnqYInGvsLpI6TEf9/xpIQ5tEgFXGv/kI7uqR0paLu0Sg5MD+4Z+4oz7F
73lmLwIRnyv8m2zoiD1MQ57lqgj8i6qNKLLDPXbuR/6UCMTvpPnoOOL5PYZf
LS6IQGCe6Akv3P3tTlf3MImCVDqrVDru6hojwzZuURA1kg5jc8LzP5YsZFcW
hS6zWyGNuNkdy6862IhCztjMMwcXOmKrY9u74Z0ofMEEWfXd8X6eSHPrqBCF
Nzxx2t64hXl0wvJrROFo0YjAHdxkM+fSgz9E4Ybsh9+zuHfXlVHTpkQhGFW3
Pfego4i6k/x0ihjsWaGkcB2lI6b61lbzVDH4UTIQdO0YHXH6+s2SMsSgWL8q
7TVufl4OoamHYsDZvBrcjptkrmua+lIMLNmPhKgcpyOs/kp5V50YGO1OiSnD
HVq/64HfOnFoW/4h992bjpbqc31unBIHPvoFjq4TdCT71eXu7kBxSDqttHcF
t8E3kZrZUHHY7hpsJeVLR3EtISpHEsThZq9j6yHc4r/Mfitmi8ObO/bJ/+He
NDF6uKhdHJbnvAWfn6QjPyH1XT/2SoCwm5ORySk6Shb5fSrOXAIcjeUb3XAX
i6Vk6ltLQNoou04w7n9S/1YyXSXApUcv6DnuRHJ9ybEQCRgZFqNtOE1HTzf6
qi+9lAARvyrD97j7DudJyMpKwoOoBjFBf/w82ax8sCdLQrUa9oSM28vW1Ocu
RRLynb/KbMY9ZDdULr5ZEpYTOAqO4B53UHYXspSERzMmlx7gXnbLyOOMkISD
Je9Y1M/SkZDflV1TfZLAieIiNc7RUZNfx4jWiCR4h+6t2YE75RQtxW9SEvgt
zBfMcIufqRkY/ScJrvKI3we37Dn2KwNiUiDq2qmajZsSHPqjY58UTAhaSUkE
0NHOGN8Tn3KlYCPtztQIbsmXXYevFErB3XcfkhZxT7dZGli9kYJqjjlpzkB8
fxo6Yr8+SYFDMX1YATd3yxya65EC9Y+Hgw7jblYKF1aRlIaJa+yxb3F7VyS9
uRwlDY3cQbsDzuPzNrrusUmiNIS6bjWJwC0rdu6aQLI0uJ20wxLPE/ebjUf6
fWmIrjMYz8K9SVCGr+itNJBOOwXW4WZyeezaOykNLN3D2+Uu0NHNfyXrdznJ
gLD9S/vXuLlVqnxvesgA+4RTQTnuSxZfv/3xlgE51f75atynMwfTEwJlgHVd
o3MLbnMDSe3m6zJAVwpNmcPNHhVkd6xSBnTvdDzbGERHgTw7nl1Vk4VKj5vs
T3CPbTTm/60hC7/z5DrycXs6Hjqru0kWRJM6cl7jtsr3xVoNZKHPdDOpErfW
/nvfFOxlQeGo3rVO3EPJTMtFV2SBtIN0SSCYjo5IV5i2T8mCjCivhh/uoRMT
k0WLslCxGr/rHO5Ahtztq8xy4P892ywYd4prcJ8Bnxxk7Vs2iMHdmLMx9AlF
Dt6eHX11D7fxxpz8cy5y4NZ9+10t7q3miYICX+RAO06jTy6Ejj7fe1My9F0O
JilFdWTcNhODjpXtcnBYuyNXDffZZMNnAUNy4M2zz1qHiI+uyo+xkADkmAwM
cSfrlJZZy5LgFtuJjOO4uRF1RMGaBCIhpoxc3L9v7/900YYEcz80HhTgLj4T
8LD9CAkchpLDinC7qlTYp7iS4IH6BtV3RPyKXd16PxIEvCul1BJxh9i88TgS
OM095RjEXbLY71eOSLB/Zru7bCgdXWniNpOqJIGU5u54edxuedpqgR9JcDh3
XS4ZN69raLdWPQmCwtt+UYj4Z5EDj9pI+Pz3cW0m4rd26yTMksDtiflJc9we
G7NmbGnywOknm38ed9wVEb4QDXmoLT4mEIw770+Maqa2PDAvL5wMxT17++SR
fj15yHBkUYjEHfNP//3pPfLQVO9sl4D76ceWhHhHeVDgSZPPwP3Xlof87po8
tC5V0hm4BV+Fbf+VJA+W+04rvse9iXv6EGuqPBzU4xGtwH2x/GfsvnR5GL4k
N1mNm18xZ+z7E3noS98RVY9be8Tgzd8P8iCw9FyhA3dAaOAB0ow8vHsUYTqP
W3UkmDt6Xh74D17esIj7h2149eiSPDz+c+3jEm69jXFb37AowMYDzZtWcc8P
31U4xK8AIytZk2wX6eiCLWMynqoAJnpxPYK4Q3XZk+ZcFOBUkH8tBbd6FpeZ
o4cCHO/q30jD3cnHx1HlpQDvqqbT6LixYbGgGycV4LbIpJsmbqYsNTd6iAIY
ZLd934g7gs9Mx+2WAux+U2AKuC8PJX2rr1cA2mhW5kHcl1r6apa+KkDSz7MF
VoQrN39Q/Y6vJ99F1sT6jLYXEW0KoHZ9oPUwUd8BxSubBhRgP3/D/BHc58pe
GmUwK0L/u6ZBN9xecV/fndBVBOczrTmncR8NUCy6s1kRqL1xMWdwe7qfff5x
qyJ8tm/19MftvkPirvxORVjKOCR3DrfLpHPgdzNFyF8QDDuP285uXHv7UUVY
uZvKEobblMKXw31HEa6c2S+ZgNv208kctXRF6JXVrifs6dmQY5ipCHrji2GJ
uMOyrj8Je6wIn5JMeq7gLpQUfjb9UhGkPorevY5beoNEXvt/isCkWPkjBffI
sELh8xVFyKqfTs3EvRAbWfiZiQwWb9hp93Gzq/YW9rOSgXNIh0GY5P6oiMRF
hvb53t9ZuK3aVYqTRcnwwrhS7hHut7W0smANMpjrxvs9wZ2YuwmZupAh/PP3
cwW4lZ1VXXLdybBzG9MS4XJBSRZeLzLY/zEJfYl7PGBl1xdfMnhuMot4ReQ3
qPy4P5gM7I8Vw4qI+lv2fzmUSgaV5GCrUtzPmU50OteRYf51jxfCveeV48X3
DWTYsHP0G+FOD0uSQhMZ9NcZ7HiPm/8/Hdeen2SoGP/K/wG3/83FPo8BMoyE
PM+twL2NEjN6nFUJOPZYf6zGXXPwwbL/FiWQK02LqMX98vLvn3f1lUBc7/I3
wneK5Us/YEpgnPZXsQ73canMs/yGSnB/zrCC8PqetL/PDigBj5bCcj1uo9Mp
v357K0GsJ/nwV9xV12IrLTOUwOK2R/F3Yj8fPmUF3FcCweaGBcLJ0xzhGQ/x
/IJN25qJ+bGJ2j7yVAncfB6VE15HinwdXawE8Cya0YLbID84p7xBCdQqavJa
caO6kwk0VmVILGXa24FbVxg2pLIrw4iFVAThHDv+OGYuZZCuanhL+OqfF9HN
/MpwlIlPqxO3I/NkRJisMsw+GRbuwr2s63++aYsy+O16V/ML95a0QM9gP2XY
Lnlhqoeo/7dRX/8ZZTibpq/YS8yLmoT7/gBlsFbLO0CY83Wpi3KoMqgaZb4g
/OPLon1DvDIMd9R59RHnizXkIDlbGZxiSmr6iX4fD4faDmUorJW2GSTqd3X+
pNytDIdY5kMIv7bFLMN7leFrTdIDwqVGK06bhpXBpov3L2GkfP5i5rwy/H4g
FzaEu+63X7m/kApcXMd/exj3gJ2zvsw+Fdj8ayBzlPh/B7DKAFMVuJmeySA8
sk/WtNFCBc62kTsJj+m1H4k+hMelkyX/4p4VtQmacFMB86ui1wmzfrMoqwpV
ARveSf8x3LImmJ5voQrc1twqOYH773vvlSvFKsDmfUaLMEPv1of8MhXwvB9j
RNhZecJ0AqlAPafROcJZzA9c/OtU4O2EfANhlRL2+Av9KqAe4BMyiVtTqb4j
SlwVfKxSGFPEfZi2mJUtpQou4gWNhL8Kqnh9klUFx8HcPsKnmcIm1yupQqOP
+YZp3EVtWhyJWqrgL6hpTXjrjZuaScaqwHEvo4fwrlX7yHvBqnBn3HdkBndm
nOQga5gqXN4euEJ4WeSHuVekKtyX9uCdJf4H7aCkVpwqCL8f1CCsarev4EMq
Xp/sg1OEuYs2dvW9VIX2y4tjhJuO826jDaqCR5dj6xyxn9n/Mq+NqMIPFuU/
hBPDY9lnxlRh8/vv04QNb61rfDerCn8Lx/jmcZdULXpZrFODm6yCewinkf6k
nJZTg4+3dJ8Rdm9mTJZYq0ELO5vXAnH+u2tu9tiowbNLvqcJvxn+rsdrrwbZ
iR+DCQsyj4S6uarBw0yj64QZVPENvCfVIOFobClhyXA/RbcYNfjkJMmxSPSX
Km/F80YNCjTkUwkHb6LNbS5XgxS7p/cIq+7cfMf1vRqw8yjnEA49ZPar+KMa
iHrNlBCmhZ/3cW1Sg/qk2VbCMc1fLxWP4g5IlVjCvSM8osiFRIHB29+uEp7T
T3MJVqRAv9vLFMIv5ot4UpUpUBsalU5Y0W/Qo5ZGgele3meEOZ0sRTdvoQCX
QlYV4W/6sgHcByjQ3to1T9hrvlSvOJICTcJkm2Xc8oXfer9GUeBJU40D4Z8n
R6+NxFLAttHLjbDZH9Kg/DW8nso4X8LazdG3E9IoILbJ6xLhlVfWiy5FFDCq
SMkjfOPkxBvuPxTQMqGuEG7B0ji9hyjQ0LSNZYW4z/n3Wn8epYD1ut0chLNf
pP29PE0BpvBtAoTfTuyVX2WmwnXyJzLh/jMZURPSVOB/6WJMeGugyf7mA1RQ
bvx9lfBFo9l03UNUKHddSSJcKX5/6IYtFTrm+W8RtiidjbRwpkKOi2ImYffF
+68/naCClO1sPuErwfNSb2KoMBjsWE/4d9ij/nvlVLjod5n9H3E/NaT7Vb6n
gvZQ+nrCXKSUxYFKKqD7BdyEtRlRvNr/UcG2u0aQcOTK0U2VLVRoMaiSJUy+
QIkaGKdC5/XOjYQ9z+QraSnSYOHcf86EFz9k51sr06Cq8pAb4SuCmVsuqNHg
BUenB+HXBdfMKjRo0BD56zhhjvFTZ631aRA3U+RPOMdHt+q8NQ2q32dHEx72
KHX/EE2D7cJfnhLmrjG4SomnAVc1fy5hmnpt6Y0rNEi/ap5P2Ge2k9ftJg0M
ostfER6JWlfK+oAGmQan3q4524JnTzkNhE9R6wj/Hewr+jhNg28OoiOEec1P
/tKYp4FizuAoYfWX81y3lmgw2Fw6Rtj3wgZnLxY6XJyxnFpbz6XFtZ6fDnuR
3SLhMWqwozGVDlt+/OJYxT1+QpCjzoUOfX6tJMJO+wd9l9zpcLVniwLhel3U
rOZFB2O1W4qEny+deBzlS4fp7ebKhL1iP++BIDqwLmdSCf96GHbpVTIdann7
NhL+0vaX+c5HOrxTWzUivINRdexTDR2eb5M3XsuXlfZ1to4ORVE7TQjHHTO+
f7CJDvu+BpsRNpx7BDzddKgK7NxPuFzQ4WLYIh1ShSztCOft+2/Zk64OXxOW
jxGmdr44cVlTHc5c6ztOOOd0SucDHXXwV6rzJpx11wX92qIO+ty3ThC+OToX
aWeoDmHrZU4RDr5O3mDupA4vsvsCCBu3hkhsvK4O13vCLxH+eMIt7mCyOjx0
23mZ8G6WfUunUtVhb8nqmndQhTvy0tUhoy8wmrBWyNNM1afqIBziEEdYXL5F
RbpCHXxYJ64S7vfS3MQ6ow4y10zvEB4TyN7rMa8Oh5dm1zxfJmP7cUkdzA0y
7xJez7MhOJ5FA254j6URphX0vRfi1wAT97B7hM8s3DEjUzVAu8j3IWGmODaP
PS4acJ4rPndtvU7wuWx3DdBtF84jLNg+Gb3eSwPu16SvWVH919M6Xw14yZab
v9b/xrJx62ANiKS/LyCcKOkX7JmqAf8sUBFhyWc/k6LrNOACQ+Yd4c9Lrlo/
vmmAXvrImgNNh+tVf2rAzd8l5YRbRpfW1/RrgErdPrTW31u8wM6kCWfBvIIw
Z5vGayMJTdicMvSJsDPr9LpT0pog8Sb5M+ESasnB23KacHFYv4bw0WCYGFTS
hPrU6P8IV8vsp8Vra4Lxdo56wpHOp7PqTDRh08uSRsKe6R+vb7HQBJVtVt/W
vv9TOvzRAU2wfjO6ZkGrj04htppw85bkd8KZe6Vl6Ec1oSXYvoXwO/Xq1IQI
TRDOiGojfCnH75x7rCZcybnYTthUQcpa/5omrJM+3UH4p4if4Ei6Jijy7u4i
PLcskWhSqgntDfd/r8V/dIewIk3o0PLqWZvvwie+b6o1weKzWu9afp8tltQm
TUh1vtdHmL/dRmjDmCY0sloPEJ4qJq2rmNEEm87ZNTcnDUxfWNaE68bJg4TT
TAKbh9ZrARh/GCKs+ib1dg1ZC5zZ/o4Qpvg5+B3U0gL7hvbRtfOjpLi3fbsW
3LjH+EtY/Wre9OghLajUcB8nrLnb/79zblpg5KYyQVh7YUvW6kktiK7vXvNG
tyoLgVgt6PyGTa31+/iXnJwULZgdHV/zrVOtzPBQC/6Sbk+vzUtgj11LgRZU
+ejNEF68OPrKl6EFwV/r10yLnuNmr9MCIQv7WcIOV5g9039qQWzfrzWjNBHx
2hktEHX4Mkf4zqObhTQ+bXg0d2OesH+eyP5EVW3Yx2+4QNi8+Obo6E5tuNQ2
sGZVJBJnfkQbDtsGLRIu+81kxZ+oDbt2ei8RNmMbkWks14bU9fRlwhl+A+N1
09qwV6RzzeNtvRWfKTpQ1umzstYf/VJvNQcdEDvevuaTaYlCsVd14Hvutn+E
RY3soio/6gApNHnN5VPKC6urOhAd1r7m/wFOUQ5i
     "]]}, 
   {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd1Xc8lW8UAHAjhMre69rc5Rqh+Z4SUWSESio7lawUCtGwRxmJJJT4NSgh
o9wnKSk7haiUzMysMn/v6597P9/PeZ9zz3Pe5zxX3snLypWNhYVFGv8gvm+H
OHFqutzaLmNkOp8m/4OZaTey+QApEEuUqX/rn/yD2WkW7UsiRWG3nu1pzhb8
ydTSa7rL05GIbc/U/Mt3+yfTf/ehDRykNGw9SbiuSaeX+eJAb8DK8TtYeupl
dc6uXiZrcenkYnsOliypHzp57RdT6cWCyvxCLna0Ne7j0IE+plEN2M/J/YcZ
1WZnn2X0M93rr16fNniE7d7J1egkOcCMaXv/dvJ4IWam2ru/VnSQeWCMK2TO
8CkmtLXIbVJliOnu+0B8tr0IKxW7c3C36TAzcNb02fSJYqwj7/l9k8jfzOjz
42ZTCyWYUed+r+TuEebjSzqXJ+TKMUxJMJX30zizirNdZvxpBSZQxbx6pWqC
2RwdWDZq8ALrb75htjlnkvknsWp0+DgT8z2r0eeZNMW8FMOomQ5CWP9fanrH
7WlmdEOYwLThK0zi0KkRRvEMM8NS6dGf9mpsdwln+SDLX+a9pLP/JrNeY4cv
MI4Wa/1jPv701mjyRA3mb66i23N8nll16MSP8YU3GGNwoOFD5yLzh2OB6Khc
HebzPCy2tJ8FDd9dcR4ZrMMumD+2WLjCiv70WTz9/fQ9Fn3Fw8JYgQ2tOTm1
d9igHrM2GudjtWNHKr76YQPHm7BScq6bWBUH0t3xY2aivRVrC7nWKWvHgy5Y
nnL4LdeJceX11j0+K4CWL+tKfI/txATB1E79hQAKLWVtbf3Xid13I1nT2ATR
FambBhUfv2AmKQr3W2IFUXxfjUpURDem9qHySXaGEMoKlB1VGf+Oxevc2sGT
J4J6mwe3ah7rxaa6r8nye0ggpZP7JB6m9GIPivXEuXMlkBt78YxSfS828qLB
JfurBBrceLFAfNMvzD4kO7zITBKNpIuQWIT6sGNJnNXu6lJo1mUne9Pbfiyr
Sm+woEkacf+7VedBH8b87+5SrOySQ/oRnef3OA5jx0TNO4+yk5C7iBhVLXkY
oxeX8VSJk9BbzcT43n/DmE+zCIuYAQldORm53+7Nb+zW9+08m26QEEu339fd
9qNYQ4L57CldeXTh+/0AAcMJ7JmyQNfAMQWUeN/QMvToBPYwZEA4ykcBPTj9
S33cfwJr/jlov+GyAvqyIN9V/2ACk0lwfPsmVwHpi9/eFsk/ienXddWODCmg
WYsktpWuSUzg4e+rO04rIp/qi7EjvlNYy8M1EgqOSuivQPLjrpgpbN7PtcDM
SwmFOOY3vr83hfkGMrY7ByuhWJYW/v8+T2Hgp9dmmqaE8rcrpLhunsYGJtxj
ZZqVUE9Fze1vrDNYyLLM9dZNysjiGXdh87VZ7KPBj2G3ZWXUzibbzPxvFquk
v/Ll51FBR620JguqZzFu/YiuPBEV5DFppx03PYsdTzN5mUVVQZEaj56bHJzD
pjED9PKQCmI+3Ieq5f5itU4DZS+eqCD6vaSW4oJ/GCP1bstVK1UkfJMxh+r+
YYd0TI6P2auihZgG6YZf/zBONnk/w+Oq6N0ZLvc+yXlMLrXPk3lBFTkZXFgW
iZjH2raLqfbfVUUpP50o/scWsP+yQwpEJ1XRIknr6ib+Jex8E1vAq4tq6Kdw
0wNDyhIWruETS49UQ3VrPZotjZawJrqcR9w1NXRjIlfqZNASlluYPkrKVkMM
JFGUPriEyW0uvpX9Sg05H2P9voCWMbYnu3bJsqijvn3u0t/1WUC+Jsgo44w6
En7roRRiyAIDGcE284HqaOc2H6qMFQtY3bvusC9UHWVRzm89fIoFRNaI5XfE
qiP7tbH27bdZYN3J6/n+ueqo9VVhRhMbK/ztE2saaVNHVTpz0qieFQ76n98k
SSOj0YcLSsc6WeFRD89Fay0yklZkoS33sUJMk0hsuB4ZBQpwb9u6wgrnLDK1
WneQkc6Y5JEyTTbwUqSqctuS0YO87bef3GCD6VfWm1iCyShVMlwm24Ed3mEF
8q5vyGi2tzFvnyc7SJw7e4v3PRlZPxbTWrzADjENuuQHjWQkCP8ZHUhlB62P
heVN7WQU61rvtb6RHVh+FHFUDZFR6BPB6sAta+DmzooLWusoyN3ojpuVKAck
GIp+bt1LQW/5BidWFDlAm+/IpmRzClLuZFx4rMkBa9pf6pjvp6Cfp6oT1ppx
wK0TLnJFdhRkf72vrOoyB5z/5DZDPUFBFt0UXsokBzww/6XKcpWCNvmWFbLX
cwKvwsGdTmUU1Lyy5ahPJydk1N26ZF9JQW5xzHXf+znB6NpYrWUVBSXmvz1R
wcoFyd8Xr9BqKGj4W5uijx4XOA7ZlD9ooqCMvZOp33K4YPrd53fVfRS0rEQO
LQ9cC/ZWreqZG6gouegxXTViLdQOSdHXClARGTS/JievhR9nu9Q8hajI9rD+
Zu/CtbC8xUeKLk5FhdeNplX61kIVfSg/RJ6KHJad3JMtuKFI+eYad20qet1+
y8JLlQf6J86PRFjj+Z1spme0eQA+SToftqUit9ENN4OAB+h8e1YoB6mIh/3S
96hDPGC0olZRc5iKLOjunvdieEBK80FpmxMVfbuiE9s5zgMiFqOFvt5UNK/Z
UGtQxgunSGscX0dRUf2L8FPva3iBzVf5hUEMFWXuBj7LFl7w9eJjvoqloh1H
ntkeHeYFx4fnPpQmUFFkZFpfgPQ6WPqkcOJqChWJfndlLwhdBzdfvxh4nkVF
mrHL28VN1sOdRaPEyBIq0jqx6PLYdj08HLIlfy+lIh2j+eidLutBkhESol1G
Rboss589Lq6HN2IWpz5VUNFWv1HPVyXr4XdAwbtlJhUZ23dnnlTYAI2kMx3D
dXi/qBXLLxY2wKkf5S+xbipy4i5TsuLmA+6Q363WX6nIub9kz4AoH5hMnBFy
/4b3K+vpDQEtPjjJ/kkxqoeKPIT/o7u580FSz+jXkl9U5L+YepTvEx+QVpK3
vhihot39m78zDvCDAdpWnLCAr//YNhJxhB/Wa3XNOCxS0RXkOf/NmR/YRo1G
GUtU9Co9RyTOmx+i4lw4G5apaIs5j+lQFD+0UQ2kZ1lpSKOssyz7BT9g45y+
69fSkFh0QKKgggC0XRU5d0SIhnT9BbNOqAmA3IK1FLcwDVm7PHqM6ALQwvL0
6TPc17f3vPPcIgBFgitlHKI0xDu1e+W9tQBkSIY73RanoZXDYh6XIwQgf8XW
L0OGhgZopYbTIwLADIyc7VWhIYXg066UKQFY2ie0clqVhuzrla46/ROANBd2
rTnczSeTapo5BCGG/lCaS52GKvK8DR7LCoLtCwmKDIWGYuUpO9wsBGFIplhH
UYOGNEWytnY8E4ToyMDlTF0a8nA5YM9XIQg+5aP5/Ho0dP/ZhiAj/FY4+t39
bhhuSavgyuJ6QTB0WBvnqE9DaxLsNl/vEwQ+vidWEptp6PNaEf09YkJgvOFC
+IltNHRhMUr7xXkhsG9SkU8yoKFGP+fk82FCwIUW8v/iJo1undGPFIId7BB+
ZBcN1XwdLy1JEYJtwT2GyoY0tI5ps7nwiRB4a/bMPzKiocww+R05/UKQmLZF
LdOEhl5xlu+LtBKGhM/83hvMaUj4YmKh0SFh6OlVeeyA223uFD+HgzAYRTIc
inDzDMq2hp0WhlEbHqq1BQ1Z1V2xuRApDIZa285et6ShXzEW9p5VwsAnmH51
aj8NcQkMnrAmi0C6rvnWwwdpaDbC3vAOQwQcX2UcT8Pdv9xMGtYVgaBL6Zrt
uN+OlLdfNBCB3PAd9ywP0VD4uxjDh/YiYLd0VninHQ1xhmrIsyWIQLm9zk0B
e9zj5zoKp0Tgqm3SkOcxPL/r72fz/0SgZ+HlQjbu/u5jCYYsotBbN/myDffb
98ZGXetEwSQw1XqTA57/vmQxp4oo1PLkdizj5jxalXDkoChwJ5pkXnCiIY4G
jt28L0VBSbSHjrni/Tyd4fz1tShUsQzkeuAWXq8dWvgejxvXNKXhVjJzKN/f
IQpbBrdsn8K9q6GCkjElCqp9D5Nz3GjoUoMXP40sBuJbMuKnjtMQS2Nn575U
MdiY4jDgeJKG1np6z5IyxSC40PZeOG7+DVxCU/fw5ymcig9xk/bpmKYWicE2
MD0+hRtrjK/63iAGso0LImGnaCik0eCu9xpxOPna/9h1DxpaaHzskegjDk8f
hWKRnjQk2+J4a1eAOHyIaHXJxb3zo8j72RBxePs591A17uj2YNXDseKwZD5X
tIBbvMfsp2KeODR6HqF6eOHzOTl6oKRbHMYOTp/f5U1D3kJ0g47dEvD5jH5c
mw8NJYv89IneJwHuDWOaI7ifi93I2mojATUmRoXsvjS0LLW8lOUkAT3z73W0
cMcpNZadCJaAMs8PPnG4H2z0pC8USUC+zIPBrWdoqO9AgYSsrCS82P3WJ8wP
n6eDS9X2SpIwr9xrk4Tb/ZCpxy2yJPgsMWRzcQ/bDVeJ60nCniss9u9wTxxR
cRGykATN45+urT9LQ4vOmQVrL0lCFD2aLQm3kHe8wVSfJJTZvZSLOUdDbd5f
RzRHJIHV4Gd7Gu4bPtQb3n8k4VMCPTAft/iZ94Ojy5LQ7Fnl/wa37DnO+EEx
Kegf2Om+jJscFNLx1UQKNs5IaXv409COSM/T7x5LgdfknKV+AD7/Rd8PxBdL
QYLCpK8h7ukui53WlVKgal4fbIX7voa2WM87KZCyaLD0wL2ufQ7N9UpBE6/1
XCbuz8phwqqS0sAWhmxYAmno1Oukyqvh0iCkqL2zGPeu0TX398bh1uP8WYVb
VuzcNYFkabD/NOBVF0jcbwddb2dLQ/LvA7bfcOsKyvCVvJAGZUk/S67z+Hl0
vO/06480FNuXS9niTlku4zY4JgPrfQeeD+Bep/rGM8VVBjI3tFaN475i3vJx
4JQMbBThL5/D7Zs1dDs2QAbs6zoiuC7Q0L6dklqfr8vAq4dfr6ng5gy/YHei
RgbIBi+cnHAHrN/+MEFdFuofFUe24B7fuIf/p4Ys9M2elOvA7XbU9qyOrizk
5ZU//IbbutAT69wpC+XDDrm/cWta3vmoYC8LkqW3ZDmC8PefzLJYEi8LJLtB
XV3ch6Vfm3ZPyUKasIbndSJ+evJPybwsOO4dMUnFHcCUS0tglQPXQ/lSt3Hf
cArq28knB5vij2Tn427N3xjyH1kOHjmE6jFx79mYX3jOUQ7SP9VmDOPevC9O
UKBJDnjyaS82B9NQ3Z3KsuFPcsCV8vMchvvg5NDRmm45GFyOUN+F+2yy0UP/
YTl4Ofv5nBkRH12RH2cjwX86g0XHcCdrl1fYyJJAvHO08hLudYgyomBDggLY
ePI17p9plu8uHiTB28p36rW4n5/xv9d9mAT3IiV73+N2Un1tf8OJBDGPZA1a
iXi8XQO3NwkC7j0p7yHiR6IKJqJJEHRNL2oRd9l8v3cVIsFl3WdTGiE0FN+2
zkyqhgRt/qZLWridC7TUA2pJcFKrhVUX9wankB+ajSTgKa9e2ELE60SscrtI
QD+8o3g3Eb+5Szt2lgRKYLn9KG7XjTkzh6jysPfr6eEI3NHxInzBGvLgERqg
G427YCBSLUtLHmz/DIfE4p5N8zrcry8PvJgcx3XckctbX/kaysN159MDabgf
1LbHxhyVh5EdpWsf4h47tF7p5TV5+NLt2vMet+Cz0G09SfLQ6/judT1u3XXT
tuyp8pCrs/FeI+6LVV+iTG7LQ/cNsG/Fza+YP/7pP3mYEc35rxO31sjOyrFq
ecg0LXg5gNs/JMCKNCMPtQJzQ6wXaUhtJGhdxF95UNz6+CY77o5DYW9HF+Th
6ELELg7c+hujN1eyKUDK+qqktbj//r6lYMuvAJw2T/j5cJ8/xPwTQ1GAz3z1
kVK4Q3Q4k+YcFcBZJjJRCzc9h8fsqKsCPHlQP6aN+xsfH9cbdwUI5nttvBE3
9lvsQqKXAnxv+jijh5slR92ZFqwAr7YN62zDfYnPTNv5pgKMHRHasxv31eGk
j42NCnBH49bQIdxX2vveL7QoAEfYhQk7wjV61WqfFECg8+XMYWJ9ZteTS10K
8GfqzMIRoj4rxXjdQQXgfvZryhH3uYoi40xWRTDLf5d+Ard7dMvL0zqKcPmI
WrM/7uP+iiXpeorw8cPTvADcbi5nH9VuVoQD2n3Bgbhdtkvckt+hCPYtVioX
cDv+cQj4ZKYIQmERx0Nw29lNaG07rghrTxs/voLblMyXvy5dEfxn5K2v4T70
zitf/bYiJKWfYb1O5HdrzjfKUoSfac8fEw7Nuf5f6H1FaPkrzZ6Eu1hS+OF0
kSLMn4nKTsEtzStR0P1BEWqwvQXpuEd+KxQ/WlKEYXKY4D3c/6IuF9exKEHX
HDWbMKfar+J+diVYPLJIz8VNcsktIfEogcwzHuP7uK27VZ8niyqBUgGndz7u
F/XUiiANJbCyvHrzEe64x7rI1FEJnmcM7i/GreKg5vjYBc/ntOMj4SpBSbYN
7krAcfm1ZQnuCf8lgyZPJYj6amJaSuTfWVNrGaQE+gej9MqI+tstm2xTlQA7
qzhYifsRy+lvDg1K8Eb1bEU1bsNnRy++alaCmuRU+dfE+XG1ICm0KYFZK28k
Yf4P2k69X5Qg02zMqga3X8p8n+ugEiBKZc8b3FvIkaMn2ZVBsuLM13e43++/
u+i3SRk89bY4N+Iuuvrzy62tynAzhPGUcPpz+fJqTBnczR4uEz4plXWW30gZ
zPbo3GzCzd2bMfbQShnObsl704zb2PdGz89TynCk4RHPR9xvrkXVWGQqQxGI
7Gwn9lP9Lsc/WxnarghfIpw8zRWWeU8ZdJIKXxF2ORi+beSBMrC0V2IduNeQ
LpdGPMe9C/Q6ce8sDMqvalaGPX5+wl24UYNXLJVdBbTHpGO+4dYRBt5UThWo
+shXQzjfjj+alUcFBI2zFwknDDyJ+MyvAuYBOR7fcR9l/XMpVFYFHmxkGPfg
XtTxC2zbpAInxHnHfuDelBHgFuStArlze/79Iur/adzXf0YFzj0yV+0jzou6
hIulvwpkHuO0Iby2tNxRJUQFHJJjCgl3NM3bN8eoQMEKq2M/MV/swfuV8lTg
oAxH6QDR75NhUP9VBXb73aAME/U7ObxT+YH/nhm/BeHSQ5hF2C8V6Oc28yNc
brx0TPe3Chzu439BGKkEXsz6qwIS0Gj8G3fDT+8qPyFV2GEYemAE96Cdw1YZ
E1V4/tLFdIx4f1ZYjb+pKvShpROER0xkTVvNVcFY2TWC8Lh+9+EIW1UoNsl6
RXhW9OCFSWdVOB/VrD2Om/2jecWbEFXQVj3CN4Fbdi+m71msCitjxrmTuMde
nVqKf64KMs7/VRJm6t+sLqxQhWOKAy2EHVQmTSeRKly8urBEOIf1rqNfgyrk
vIi3/oNbtYwz5ny/KnwojVggzFBu/Bourgapp/5oThP3YcZ8Tp6UGvR02e0i
3CKo6v5OVg1eet+3JezLEvqHW1kNmisHzhMu6dLkitNUgwQkVk14c2IKI2mP
GmxrtN47g9tgxf7ynSA1KDcO3jOLOytacog9VA3krw3YEV4U6djnflkNxM/o
niJcSt0vqRmtBumbLsUQVrMzeVqdqgZZkp/fE15XsvF7X5Ea2Ook7prD3XZy
wxbqkBrsZvdT/kvsZ/ZD1rURNQiLqdAiHBcWxTkzrgacUcMYYaOba1pfzqqB
2BUuO8Jlb+bdzdeog3HXpjjCGaSBG75y6hAicnecsMtn5p8yG3WoFbye+4+Y
/x/vU3oPqoOeQ1oh4crfn/Q32KvDqdbr5YQFWUdCnJ3UgRG2v4EwkyLOu8FL
HXJipacJS4Z5KzpHqsPrkM7t80R/KfLW6yvV4c/InTrCQbrUOb0qdRg+2dlC
WG2HXrrTK3WgjnF8IRxia9bzvFYd0hz0hwlTwwI9nNrU4VogB88C7sjPLVee
j6rDJ2/r3YS3h10qcSSRwXoCygnPbc1wDFIkg1XadybhJ39L1qeqkGF69sxb
woreQ671VDJc5g35SHjtMQtRvU1kOL5JYpTwx62y/uusyMCbGyC7SPx//S3X
f36ZDJPZBucJyxd//NUSTgbv7JKLhL94jV4biSJDLEPuKmGzAdKQ/DUyzOh3
JhDW+hyRFptBBvXE4XuEl57ZzDuWkOG7U0ID4USvycp1A2T4etpIYgl3O5ax
9tQwGQyfqsoSlubfbVM3SoaIQRZFwnlPMsauTuP7sb9FJfxicrf8CisFRq76
YIT7z2SGT0pTgF36kTPhzQF7LT9bUeDMuXv3CV80nr2tY0uB+rKbDwjXiGcP
Jx6iQMuO8ALC5uWzl80dKLDRyqyUsMt8dum70xT4kRz7hnB80F+pykgKXOrr
+En4Z2hu/50qClwvmRJfJu6n5tveNa8oIL5nXIowD+nG/GANBfqM+2UJazHD
N2h9oIDrrbdKhC8vHdetaadACN2SQVjpPDl8cIIC5B+JRoTdzhQqaypSQVBi
3IvwfHVeoY0KFU7nOfkSjhfM2nRenQr3LFr9CJc+vWb2WoMKZdz3AwlzTfic
tdlKhbkncpcJ53vovAm0ocJYnkMK4d+u5S7VEVRw7sCeE173fmcCOYYK7YEe
5YSp9PryxHgqRB1IqSTsMfttg3MKFWp6u5iER8LXlLPfpcI2z23vVp1nvt6w
igrPAg93EB4b6iupnaZCUKPyLOEN+7x6NP5SYWnD4BxhetFfnpsLVJi1yPtH
2PM8r4M7Gw2wEeml1fU8mjzc/DTIWdPHvkLcr5Sgo3soNLjYM8JPeOK0IFeD
Iw3WOC+qET5mOeS54EKD9gVzMuFGHfRZ3Z0GPEHZFMKPFk7fD/ekwb8d2+mE
3aPqDOEC/rz5MW3CPfdCrzxLpkFYgsE2wk1dY6zptTSYsH9oTng7882Jd+9p
sLur2mI1X05Gy2wDDSzudlgSjj6xJ3t/Gw3MJVb2Ezaay4X1P2iw+EXvIOEq
wSMXQ+dp0HrPzoFwgcmHRTcaHZKb/bwIU749OX2VQQctGxtvwvm+N77d1aZD
XICOD+GcW46oZxMd2u6O+RJOGZ27bGdEB65aq3OEg64r8e47RgeqUHcQ4T2d
wRIbr9PhRxpbFOHa087R+5Pp4C1buepdbCYLPql0uHDJN3p1fxThrwW36aA6
/jWGsGbwgyy1B3R4eTUvnrC4fLuq9Gu8vhXOZML97gxd9hk65HxlzVx9PwJ5
u13/0oEkeH/VfytkDtUu0IGdZnKHMPd63qAYNg2ol4nNIkx92vdKiF8D6Aoc
dwmf+ZdupkTRgL0eb/IIs0RzuBo6asC/0tgnq+u1g87luWiAwSWBp4QFu/9E
cLtrQJRvyqoV6T0PGjw14GtdetFq/1srJmyCNOB49K1iwnGS3kFuqRrw+OjZ
MsKSD78kRTRowBq+eCbhugUnzY6PGtDiaIMIB5j+blT7ogH+OpKvCLePLnC/
79eAt6EZ1av9vbkBOFkY0FZ35Q3htV0apcYSDPBHI+8JO7BPr/GRZgD96bUP
hMsoZfvT5BiQz9SqJ3w8CCaHlBngcMSngfBbGUtqjBYDtj7pbCJ82cE3p2Ev
A87YHmsj7Ha79vomcwbc0J5Z9Z4v0mG5VgyYloz6tNoP69pjwYcY0LXy4DPh
rN3SMrTjDBhpae8g/JL+NjX2EgOyhbq6CV/J9z7nEsWAYO4PXwmbKkjZbL3G
gC+5xd8IfxHxFhy5zYDn6Wd7CM8tSsTtLWdA9OSz3tV4x49gdsSAVtEzv1bP
d/F/npVv8frv0PpW83tssqC0McAqNaWfMH/3QSHecQbMjGsOEZ56TlrzeoYB
Rb0Nq/6cNDh9fpEBFxNdhwln7A34PMytCVhC5G/CapWpae+VNGEtV9YoYbL3
Ee/9mprAJxM+tjo/yoq7u7dpAi3PYZwwPaFgetRWE8p/zEwQZuzy+3DOWRPo
c08nCWv925Sz4qUJB2+4/iG80fmNuUCUJoR2lE6t9vtkU37+DU04H+w4Tfim
Tycr3NMEz3j2mdXzEtBr1/5UE+x5b696/uLoM0+mJhhM02ZXz3fE3DrOBk1Q
Mild9ZF4VrfbXzRhhVt3jjDKEBGvn9GEnCapv4TTc1OKqXxa4GDcsWq/AhHL
ODUtMOm88o/wvucpo6M7tGCmWH5+tR9IJHrfYS1w6SpYdcVPFmv+OC2YY7+x
QNiMY0SmtUoLLlRaLBLO9B6caJjWgiSrhVVPdP16XUfWBv2BK0ur/dlafkr9
iDa4OU6s2isjTigqQRuGKabLhEWN7cJrarVBi5m96qoplX8rK9pwRn5g1f8D
Xi8jTA==
     "]]}, 
   {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
rvj/bw+SoQ==
     "]]}, 
   {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1: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
36XEXtaEHsu+zvW4h1TEwlVNCOh2/E74Sq7PeecoTThS2rvuPYpSBw2ua4KF
a3sX4U4RH8HRNE2ID37WQ3h+RSJud4UmRB+Q/bUe//YziBlpQgV9aN1VxY+8
X7zThBHV/L71+p56ltRWTfhqqjZAmL/riBDXOD4P7j+/CU+XybO8mcX7f3Ft
iHDbjaGZiyua8HlIY5hw6m7/thEOLbir6TRCmPwi5XY9SQva798aJUzxOeaz
X0sLJu/GjK3vJ2Ul065tWpDh6PuXsPq1gpmxQ1rw2lx2grDmf2c/nnfSAv0/
/evWXtTLWjulBVK3syYJb3J6u1cgSgviX7FNr8/f/VNu7k0tSJioXPet0x2M
kK0FKcInZtafH/8+m/ZnWpClxj5LeCl47Ll3tRY81bi3blrEPDdbI35/Fa05
wsfiGU+kdeL985avG6WKiDfMagFP0eN5wnceJBfT+LThWPnpBcJnC0T2xZG1
oXNKdZGwRVny2NgObZi82bhuMhKJtjiqDfezHZcIV/5iOMAfpw2Pqg4tEzZn
HZVpqdKGlBGpFcLpPkMTjTN4Pm/zuie+97/5QNGB/MMOq+vzMajwUDumA75t
Les+lRonFHVNB4prdf4RFt1pE15bpwNZivHrrppWWVxb0wEf1/Z1/w/+xy1g

     "]]}, 
   {RGBColor[0.647624, 0.37816, 0.614037], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.571589, 0.586483, 0.], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwd1Xc8VW8YAHAimVmRzeW6rrvci5RS5/klNJFKSDZpWA2UEaWMUIk0kDRo
oWRW7mtEZDSN0rIzQmSP3zn+Oefz/Tyf9/m873Pe5zkkFx8r9yU8PDzK+IN4
p4a6CHDcbm5YMkO7+6T+FzfNbmDtXrWTWNqWhTo34XZu646Yo2pq0Rjf2PrD
prvaubqrG+8ItyRg/ko0Q7MH7dwAM9vlS9WuYz5Nwff8xDq4L/d2BC4cuIV1
V0yf6wnr4PI+LxiZbc7AxtHZdZ38nVzyyxnK9Mw97E7Uqfcvb3RyTSvBfkL1
AXZAJEhTxLiL61l37vKY8WOs8cuPPOH5Lu6FT7VVIwdysA13tu7uq+vm7v2z
LHTC5CnmItgSxf+0h+t59KHcePMz7E/Wf3z1j3q5J8e3540dfI5ZuV6v/lD6
mxtzamjH6Ew+1h6T8Kysv4+bMn+5dySuEBN3yGpy0x/gPjmjf3ZYtRiz7TSs
yroxyC0VaFYeelqCvTfjO/hBdYj7LuZk0aDxS8xau3C1mcsw929C6WDfAS62
LvZtZq7eX+6ZC+zKsWCE3RiN3HSXPcqNqQ+XHDMpw87z0Hqd141xU3aSH/9t
Lsf+7Epvtggc5969cmJqJL0C67jgEC58b4L75HOV6cjBSuwN+uBo2DTJLbU9
+Gto5jVWv7rFwtV4hvvLOVt2ULUG+9dIbhdR5kF9dxZcB3prsMOxMvtiX/Kg
v12WT/uf1mKv1BxI0vt4Ef+h0W19xnXY7zKrHMOkJYhydE14z4FGLKf7x8yK
eX5k8N+vf8PNH7BfSvu3md8RQkE7Dzv1q7Zin313zr1Tl0TzZw3kf8S2Yoce
KlBaD0qisALeDx+mWjF90Yoaz1xJFKF4zbjk4xfsxEnBhyQjKRTfVUmJjmzD
VFmWPeLm0ij9pMogZegHRk4WuhBjL4M63vUacRw7sCpzbxcZbXlEPmQu/yip
A9PL9eMNc5FHHnzP/5HrOjCBlbG60TflUe+q09lyhp1YmfXsj5OiCmjghowa
j3QXlv40yKn7twIad9vI11jVjenSzb/6X1FCQlM3a46w+jAlV7Zs8j1VtCay
9dRWZ9xzTb5D71SRp8xKBjWxDwtpn5Llm1VFVZyE+I6pPqyY3DyVTVVDEYei
dtm97sdsGq1a/IPVEE/b8W9m9oOYE+mn1W9lEgr6cT9Q0mQY0+8Jv1WwRR0l
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
ov8H5ZAcng==
     "]]}, 
   {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
    LineBox[CompressedData["
1:eJwd1Xc8lV8YAHBSsvcmLve6uPfimiH1PiXaZbRIVkiZadijZCRURhqUJi0a
lPVzT5IVSslKhCgre6/f+/rn3s/387znOc95znvOq+jkbemyio2NTRb/If7T
Q504tZxvb5KosvMxZ7az7tgMGh0iBWC3hslpzvwdrJY9sb4k0iXM5ws3k8n2
i6W9/vMDnuZEzD6guf5q5C+W3zZrgTWkm5hFWoBgs2Qnq/hQt//y8buYmFuR
OSm/k8We+3Z0oek+pvJx/a20410sSvE8dW7+ETb+ZqooVaWbZVYGttMKT7AG
5l2KzUw3y60m8tqEyXMsbK2JSXvLb9blhury0eM52JFdkeZGtT2sQ//Whk6b
vsLsSuossr/1stx8n0pNNb3GVOXjAq79+8MKmNr9ZuJELvawxkt+v0IfKzZw
eM/4fB4m7legdP54P+vFBd2IEYUCrMxK/FLT1iFWCWfTuuFXhZiN3WJWd9s/
1pfYgPwhk2Ks0FYj/+X2EdZYYslQ/3EWdvgTm+9e6hjrwmVm2UQwwtQb075O
UcdZsbXnhSdM32O617+UJepMsNIsKM/HmkqxifKKiXSPKdbDpLOzoxkfsCKN
c+9HkqZZL76Xm42eKMMCe1m62SUzrBLrE53D8x8xUtab/F+y86xOx2yJIYUq
7OvrI3p9vcus/gfLxwb/VmEP+s0Ux+PY0FiP+auBV9XYN75W2/PK7Gj1yfFd
/SY1mG5sUP1Xq1WI6mtw/s/xz5g4Q83U99FqpL+5c3Kk6Ss213y57dc6bhRk
4e4woNCCzX66LBb4VggtRehLd8S1YH63TQ5+nxNC4W/Zv36dbcFS9P+lFW8S
Rhdlb5gUfmvFOhrYTLQ/CqOEnjLqpeg2bNXPCb3PNSIoI0B+iDrcge1U/+xz
tkIMdX/5a6xl342V95U023lLIcrJvdLPUrqxPVx/mu8+lkKuHLmTlJpuTPi/
ZImIn1Lor15YtpThb+wqPbFce6c0GrwlTmIT7cEiz4Rs3a4gg6act3B8Lu/F
ot5vcqjPl0Xcs7erPDT6MSUxzvsHXsgjg+iWwJ2O/RhTKp6Xr0keuYlLMlST
+7HDKlyHwtkUULlWYkL3bD8WZ3hf66GlArp4MsbK5uMAVjjcZvp7XAGxtZ35
uc12CHN3N+3bl0JCQR2P/YVNRzD/r9XnvuYposTHphbhdiNYw8Bg7EC5Inrq
+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
bLeJKqvQAV7z5ysuGafOLi/rQOCt4RX/Dyz9I4I=
     "]]}, 
   {RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
Dy1ZkkM=
     "]]}, 
   {RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
TNCIeekB63D/sv8Hz6fgbQ==
     "]]}, 
   {RGBColor[0.736782672705901, 0.358, 0.5030266573755369], AbsoluteThickness[
    1.6], Opacity[1.], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
    AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
K7XAifR81aWTlH8rK1pwat3wqv8Hs+01jA==
     "]]}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
M3zZxWM0og596Ev6sez/ASgjm/8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.674178105275016*^9, 3.674178189149099*^9, 3.6741782630458336`*^9, 
   3.6741785091998453`*^9, 3.6741786084369483`*^9, 3.674178647677438*^9, 
   3.6741824681911993`*^9, 3.6741829587269573`*^9, {3.6741832331302624`*^9, 
   3.674183275503338*^9}, 3.6741859772120256`*^9, 3.674186464456807*^9, {
   3.674186668158226*^9, 3.674186685471449*^9}, 3.674186838190962*^9, 
   3.674186893719232*^9, 3.6741869451659636`*^9, {3.6741869781689787`*^9, 
   3.674187008252553*^9}, 3.6741871720245686`*^9, {3.6741872509050894`*^9, 
   3.67418728724841*^9}, 3.6741878111047907`*^9, 3.674187910702652*^9, 
   3.674187983826773*^9, 3.674188087092764*^9, 3.6741882456360826`*^9, 
   3.6741883859412184`*^9, 3.674188491063528*^9, 3.6741886053329115`*^9, {
   3.674188673107337*^9, 3.6741887176073174`*^9}, 3.674188762925231*^9, 
   3.6741888009112587`*^9, 3.674188894006564*^9, 3.674188925791786*^9, 
   3.674189072790262*^9, 3.6742228250640373`*^9, 3.674222907447842*^9, 
   3.6742230916225615`*^9}]
}, Open  ]]
},
WindowSize->{958, 998},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 64730, 1449, 3132, "Input"],
Cell[65313, 1473, 2154, 47, 72, "Output"],
Cell[67470, 1522, 4509, 97, 172, "Output"],
Cell[CellGroupData[{
Cell[72004, 1623, 1047, 15, 23, "Print"],
Cell[73054, 1640, 2760, 64, 50, "Print"],
Cell[75817, 1706, 4154, 78, 245, "Print"],
Cell[79974, 1786, 2081, 53, 245, "Print"],
Cell[82058, 1841, 1034, 15, 43, "Print"],
Cell[83095, 1858, 1038, 15, 23, "Print"],
Cell[84136, 1875, 1387, 22, 23, "Print"],
Cell[85526, 1899, 1275, 21, 23, "Print"],
Cell[86804, 1922, 1275, 21, 23, "Print"],
Cell[88082, 1945, 1275, 21, 23, "Print"],
Cell[89360, 1968, 1275, 21, 23, "Print"],
Cell[90638, 1991, 1032, 15, 43, "Print"],
Cell[91673, 2008, 1040, 15, 23, "Print"],
Cell[92716, 2025, 11569, 375, 405, "Print"],
Cell[104288, 2402, 2067, 53, 245, "Print"],
Cell[106358, 2457, 1293, 22, 23, "Print"]
}, Open  ]],
Cell[107666, 2482, 1727, 30, 52, "Output"],
Cell[109396, 2514, 169980, 2817, 229, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
